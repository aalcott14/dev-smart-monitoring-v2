{
    "config": {
        "cols": {
            "lg": 12,
            "md": 10,
            "sm": 6,
            "xs": 4,
            "xxs": 2
        },
        "currentBreakpointForFlyoutWidgets": "lg",
        "currentBreakpointForPanes": "lg",
        "currentBreakpointsForWidgets": {
            "10954c88-1392-40b9-ba5e-215c45f42068": "lg",
            "1570b53a-18f8-4383-bafd-d1ab7224d977": "lg",
            "1ec32985-fee4-4383-a261-127f5c6575fc": "lg",
            "24b04a3f-425f-45b8-ab26-ec448c304989": "md",
            "2e48ba99-a230-4cef-8ba1-15ce54c92d8d": "lg",
            "3009f0d5-55fa-471c-ae3a-77fdf43e8e20": "lg",
            "3667bf06-7abe-4486-8dcd-03b23e4fff12": "xxs",
            "3c6f225a-fd46-4405-9c2c-7b4251e27c6d": "lg",
            "623b2161-0ce6-44f9-beeb-68813d3087cf": "xs",
            "65a17957-631b-4ae6-96fa-f1751eddc6b0": "xs",
            "6d3e21dd-6965-481b-82a3-9d1220685436": "lg",
            "b56980a9-cdba-40d4-bee5-4109cfdab317": "lg",
            "b62bc750-ba2a-4572-a46b-0edc443daa27": "lg",
            "d207199e-8c53-4c77-86a3-5605f4ee9667": "lg",
            "d4be2c04-c5ff-4c4b-b2f7-d758a6a782fb": "lg",
            "d77d3c6f-b2b5-4478-97e4-31cde6899342": "lg",
            "e24dd291-1b7d-42d2-8e3b-ae44d2d797b1": "lg",
            "f788e2ba-4381-4cde-b3e8-746ebd168fab": "lg"
        },
        "datasources": {
            "03bb8292-ce36-4319-b076-bb5d10bcc1bd": {
                "id": "03bb8292-ce36-4319-b076-bb5d10bcc1bd",
                "name": "getSensors",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getSensors",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "09afcfc1-f0da-42af-8f31-d8e8104c7417": {
                "id": "09afcfc1-f0da-42af-8f31-d8e8104c7417",
                "name": "currentSensorId",
                "settings": {
                    "defaultValue": "none"
                },
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "0a4a0e8e-b82e-44a7-ab6e-913b53db865d": {
                "id": "0a4a0e8e-b82e-44a7-ab6e-913b53db865d",
                "name": "currentSensorTypeId",
                "settings": {
                    "defaultValue": "none"
                },
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "104a5846-dd20-4402-aa39-e39d4afeae2f": {
                "id": "104a5846-dd20-4402-aa39-e39d4afeae2f",
                "name": "edgeAgg",
                "settings": {
                    "datasources": [
                        "902e4d02-dfd9-48dc-9fcb-f89944b09188",
                        "2752d916-c089-4712-bc97-816c7ea2edf5"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "1584ca51-c738-4e83-8d9d-bb67eef5abae": {
                "id": "1584ca51-c738-4e83-8d9d-bb67eef5abae",
                "name": "sendMessage",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "sendMessage",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "1983d21d-509a-4937-9aae-bd363bddc10f": {
                "id": "1983d21d-509a-4937-9aae-bd363bddc10f",
                "name": "selectedEmployee",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "19dc281a-7f45-450c-aafa-5186a3778bab": {
                "id": "19dc281a-7f45-450c-aafa-5186a3778bab",
                "name": "updateSensor",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateSensor",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "1da97a64-8360-4444-9cf7-fa6dbbeb4c91": {
                "id": "1da97a64-8360-4444-9cf7-fa6dbbeb4c91",
                "name": "updateEmployee",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateEmployee",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "2752d916-c089-4712-bc97-816c7ea2edf5": {
                "id": "2752d916-c089-4712-bc97-816c7ea2edf5",
                "name": "currentEdgeId",
                "settings": {
                    "defaultValue": "none"
                },
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "371492cf-240b-46e0-b856-f16c3fcaf37c": {
                "id": "371492cf-240b-46e0-b856-f16c3fcaf37c",
                "name": "getLocationById",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getLocations",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "40854ca9-c5d0-4594-8fa5-55e972d668d1": {
                "id": "40854ca9-c5d0-4594-8fa5-55e972d668d1",
                "name": "sensorTypeAgg",
                "settings": {
                    "datasources": [
                        "b3d2b4f4-a5f0-40ea-9228-6bdc0a57330a",
                        "0a4a0e8e-b82e-44a7-ab6e-913b53db865d"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "4cf06a9e-7983-41c2-95fd-89dc7830dfed": {
                "id": "4cf06a9e-7983-41c2-95fd-89dc7830dfed",
                "name": "employeeAgg",
                "settings": {
                    "datasources": [
                        "d946be20-bf5f-4bb7-adf3-d8e4cac350b7",
                        "1983d21d-509a-4937-9aae-bd363bddc10f"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "4e579570-456c-4aee-9bfe-228ec6b3130d": {
                "id": "4e579570-456c-4aee-9bfe-228ec6b3130d",
                "name": "deleteAlertConfiguration",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteAlertConfiguration",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "51099178-350b-4148-b7f8-67da06e020bf": {
                "id": "51099178-350b-4148-b7f8-67da06e020bf",
                "name": "locationsAndAssets",
                "settings": {
                    "datasources": [
                        "62b15f31-c1b7-46e6-a0a0-8406696787ad",
                        "c9f26ec9-91c5-4179-9fe8-cff657e39e75"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "5527df4b-c065-4fa3-bb4b-2a23ec8cda59": {
                "id": "5527df4b-c065-4fa3-bb4b-2a23ec8cda59",
                "name": "createLocation",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createLocation",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "55d05226-c94d-41ac-979b-b2ff92dd5ffe": {
                "id": "55d05226-c94d-41ac-979b-b2ff92dd5ffe",
                "name": "currentLocation",
                "settings": {
                    "defaultValue": "none"
                },
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "57efce4a-2108-4244-9a71-ce02762ce9d0": {
                "id": "57efce4a-2108-4244-9a71-ce02762ce9d0",
                "name": "updateAlert",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateAlert",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "5ab6335e-cd4a-45b0-90f7-523765ba6134": {
                "id": "5ab6335e-cd4a-45b0-90f7-523765ba6134",
                "name": "userMessaging",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "TOPIC_NAME": "messaging/aad6cebd0ba4a5fbc9c1dea2e967"
                },
                "type": "CB_MESSAGE_TOPIC"
            },
            "60d1b6f8-e2d2-413f-97ea-ee225fc6988b": {
                "id": "60d1b6f8-e2d2-413f-97ea-ee225fc6988b",
                "name": "updateAlertConfiguration",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateAlertConfiguration",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "62b15f31-c1b7-46e6-a0a0-8406696787ad": {
                "id": "62b15f31-c1b7-46e6-a0a0-8406696787ad",
                "name": "getLocations",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getLocations",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "62eefd77-9519-43a3-9eb9-718ad9d7b01d": {
                "id": "62eefd77-9519-43a3-9eb9-718ad9d7b01d",
                "name": "deleteSensorType",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteSensorType",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "6abe3da7-2a77-49fd-8589-b46c398a8b3a": {
                "id": "6abe3da7-2a77-49fd-8589-b46c398a8b3a",
                "name": "createSensor",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createSensor",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "79e5b700-b68a-409d-8c7d-652644fbb9d8": {
                "id": "79e5b700-b68a-409d-8c7d-652644fbb9d8",
                "name": "locationAgg",
                "settings": {
                    "datasources": [
                        "62b15f31-c1b7-46e6-a0a0-8406696787ad",
                        "55d05226-c94d-41ac-979b-b2ff92dd5ffe"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "7bf39060-7101-4f6f-90f9-0973e07afb9c": {
                "id": "7bf39060-7101-4f6f-90f9-0973e07afb9c",
                "name": "currentEmployee",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "81e54cbd-7409-4350-9b44-2a1027324570": {
                "id": "81e54cbd-7409-4350-9b44-2a1027324570",
                "name": "currentAsset",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "86223af7-76d4-41f5-b9a5-65b5d918bd25": {
                "id": "86223af7-76d4-41f5-b9a5-65b5d918bd25",
                "name": "getAlertsWConfigId",
                "settings": {
                    "datasources": [
                        "97b22889-6a40-435b-a94d-57e3d12f05d5",
                        "db4b4b3b-8170-480a-8fb0-84ac3170f34d"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "87ed1327-a384-4a17-b003-387bf8d791cb": {
                "id": "87ed1327-a384-4a17-b003-387bf8d791cb",
                "name": "sensorAgg",
                "settings": {
                    "datasources": [
                        "03bb8292-ce36-4319-b076-bb5d10bcc1bd",
                        "09afcfc1-f0da-42af-8f31-d8e8104c7417",
                        "b3d2b4f4-a5f0-40ea-9228-6bdc0a57330a"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "902e4d02-dfd9-48dc-9fcb-f89944b09188": {
                "id": "902e4d02-dfd9-48dc-9fcb-f89944b09188",
                "name": "Edges",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "refresh_interval": 0
                },
                "type": "CB_EDGE_LIST"
            },
            "9147f7c4-7ae9-4096-9328-e87913c58553": {
                "id": "9147f7c4-7ae9-4096-9328-e87913c58553",
                "name": "createSensorType",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createSensorType",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "975f7c2d-4983-49d5-8f7b-f347ee2fe1f4": {
                "id": "975f7c2d-4983-49d5-8f7b-f347ee2fe1f4",
                "name": "deleteLocation",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteLocation",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "97b22889-6a40-435b-a94d-57e3d12f05d5": {
                "id": "97b22889-6a40-435b-a94d-57e3d12f05d5",
                "name": "getAlertHistory",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getAlertHistory",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "98da363e-67a6-45a1-b524-84d44b916844": {
                "id": "98da363e-67a6-45a1-b524-84d44b916844",
                "name": "latestSensorData",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "993b08f0-e3b0-49d0-af07-19ed7736d195": {
                "id": "993b08f0-e3b0-49d0-af07-19ed7736d195",
                "name": "alertConfigAgg",
                "settings": {
                    "datasources": [
                        "e189ae14-4d5d-4bd3-b370-b270b1e4dab7",
                        "db4b4b3b-8170-480a-8fb0-84ac3170f34d"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "a5da20db-377c-4805-ba42-5a4ba90d41b9": {
                "id": "a5da20db-377c-4805-ba42-5a4ba90d41b9",
                "name": "createAlertConfiguration",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createAlertConfiguration",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "b3d2b4f4-a5f0-40ea-9228-6bdc0a57330a": {
                "id": "b3d2b4f4-a5f0-40ea-9228-6bdc0a57330a",
                "name": "getSensorTypes",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getSensorTypes",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "b4cbc42e-5834-4c46-92e1-92bcd5a8d3e3": {
                "id": "b4cbc42e-5834-4c46-92e1-92bcd5a8d3e3",
                "name": "getHistoryForSensors",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getHistoryForSensors",
                    "payload": "{ \t\"sensor_ids\": [\"351530\", \"385259\"], \t\"startTime\": \"2018-09-14T14:29:30Z\", \t\"endTime\": \"2018-09-14T18:44:16Z\" }",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "b768793e-6e0b-4d94-9a95-abfe8e750bcb": {
                "id": "b768793e-6e0b-4d94-9a95-abfe8e750bcb",
                "name": "sensorHistoryTimeRange",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "b992d07d-15dd-4894-bf18-07478423d776": {
                "id": "b992d07d-15dd-4894-bf18-07478423d776",
                "name": "assetsAndSensors",
                "settings": {
                    "datasources": [
                        "c9f26ec9-91c5-4179-9fe8-cff657e39e75",
                        "03bb8292-ce36-4319-b076-bb5d10bcc1bd"
                    ]
                },
                "type": "DATASOURCE_AGGREGATOR"
            },
            "c9f26ec9-91c5-4179-9fe8-cff657e39e75": {
                "id": "c9f26ec9-91c5-4179-9fe8-cff657e39e75",
                "name": "getAssets",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "refresh_interval": 0
                },
                "type": "CB_EDGE_LIST"
            },
            "ca20b6f9-53c6-46b8-983c-763ec7dfefcf": {
                "id": "ca20b6f9-53c6-46b8-983c-763ec7dfefcf",
                "name": "Alerts",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "collection_name": "Alerts",
                    "refresh_interval": 0
                },
                "type": "CB_COLLECTION"
            },
            "d946be20-bf5f-4bb7-adf3-d8e4cac350b7": {
                "id": "d946be20-bf5f-4bb7-adf3-d8e4cac350b7",
                "name": "getEmployees",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getEmployees",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "da2c7c6c-d63f-472a-928f-5641d881998f": {
                "id": "da2c7c6c-d63f-472a-928f-5641d881998f",
                "name": "getAlerts",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getAlerts",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "dac9d15b-60d9-454c-a9b1-bee4c2567a93": {
                "id": "dac9d15b-60d9-454c-a9b1-bee4c2567a93",
                "name": "deleteSensor",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "deleteSensor",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "db117283-a10c-4559-9b45-426118f854b9": {
                "id": "db117283-a10c-4559-9b45-426118f854b9",
                "name": "getAlertTypes",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getAlertTypes",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "db4b4b3b-8170-480a-8fb0-84ac3170f34d": {
                "id": "db4b4b3b-8170-480a-8fb0-84ac3170f34d",
                "name": "currentAlertConfigId",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "e145e2e6-b061-4fcd-b3bc-0ce511e8ffb7": {
                "id": "e145e2e6-b061-4fcd-b3bc-0ce511e8ffb7",
                "name": "updateSensorType",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateSensorType",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "e189ae14-4d5d-4bd3-b370-b270b1e4dab7": {
                "id": "e189ae14-4d5d-4bd3-b370-b270b1e4dab7",
                "name": "getAlertConfigurations",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getAlertConfigurations",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "e2825e88-2294-4f54-a73d-9f8dad4bc885": {
                "id": "e2825e88-2294-4f54-a73d-9f8dad4bc885",
                "name": "sensorHistoryIds",
                "settings": {},
                "type": "LOCAL_DATASOURCE_PLUGIN"
            },
            "e4790301-db44-488b-ba1c-ddec070b7413": {
                "id": "e4790301-db44-488b-ba1c-ddec070b7413",
                "name": "getSensorsByEdgeId",
                "settings": {
                    "CALL_ON_LOAD": true,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getSensors",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "ee3713e7-49c0-4f9d-9f65-34fc4664b162": {
                "id": "ee3713e7-49c0-4f9d-9f65-34fc4664b162",
                "name": "updateLocation",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "updateLocation",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "f69c06eb-2e8e-4fa8-9ee9-925b770e0e55": {
                "id": "f69c06eb-2e8e-4fa8-9ee9-925b770e0e55",
                "name": "createEmployee",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "createEmployee",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            },
            "fb95de32-504c-4393-bcec-5ee0cb5b580c": {
                "id": "fb95de32-504c-4393-bcec-5ee0cb5b580c",
                "name": "getHistoryForSensorsB",
                "settings": {
                    "CALL_ON_LOAD": false,
                    "SUPPRESS_DATASOURCE_ERRORS": false,
                    "code_name": "getHistoryForSensors",
                    "payload": "{}",
                    "refresh_interval": 0
                },
                "type": "CB_CODE_SERVICE"
            }
        },
        "externalScripts": [
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.js"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.css"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://use.fontawesome.com/releases/v5.3.1/css/all.css"
            },
            {
                "promise": {},
                "shouldBlockAllWidgets": false,
                "url": "https://cdnjs.cloudflare.com/ajax/libs/jquery-csv/0.8.9/jquery.csv.js"
            }
        ],
        "flyoutWidgetLayout": {
            "lg": [
                {
                    "h": 9,
                    "i": "536d3d01-28f7-4bbf-98e9-13324ecb2762",
                    "minH": 3,
                    "w": 2,
                    "x": 0,
                    "y": 0
                }
            ],
            "md": [],
            "sm": [],
            "xs": [],
            "xxs": []
        },
        "headerWidgetLayout": {
            "lg": [
                {
                    "h": 1,
                    "i": "brand",
                    "moved": false,
                    "static": false,
                    "w": 61,
                    "x": 0,
                    "y": 0
                }
            ],
            "md": [
                {
                    "h": 1,
                    "i": "brand",
                    "moved": false,
                    "static": false,
                    "w": 36,
                    "x": 0,
                    "y": 0
                }
            ],
            "sm": [
                {
                    "h": 1,
                    "i": "brand",
                    "moved": false,
                    "static": false,
                    "w": 34,
                    "x": 0,
                    "y": 0
                }
            ],
            "xs": [
                {
                    "h": 1,
                    "i": "brand",
                    "moved": false,
                    "static": false,
                    "w": 28,
                    "x": 0,
                    "y": 0
                }
            ],
            "xxs": [
                {
                    "h": 1,
                    "i": "brand",
                    "moved": false,
                    "static": false,
                    "w": 32,
                    "x": 0,
                    "y": 0
                }
            ]
        },
        "pages": {
            "28292b55-3181-4d6a-aee9-d2a2d9e6a30f": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "28292b55-3181-4d6a-aee9-d2a2d9e6a30f",
                "isChild": false,
                "isParam": false,
                "name": "Locations",
                "path": ""
            },
            "311d6f86-a496-4dbd-a480-c4cce54162ec": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "311d6f86-a496-4dbd-a480-c4cce54162ec",
                "isChild": false,
                "isParam": false,
                "name": "Employees",
                "path": ""
            },
            "939c24f8-00c5-4624-a1dc-80a758356f3e": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "939c24f8-00c5-4624-a1dc-80a758356f3e",
                "isChild": false,
                "isParam": false,
                "name": "SensorTypes",
                "path": ""
            },
            "Home": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "Home",
                "isChild": false,
                "isParam": false,
                "name": "Home",
                "path": ""
            },
            "c596d9fa-86b3-4eaa-a111-c0e80a2f7281": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "c596d9fa-86b3-4eaa-a111-c0e80a2f7281",
                "isChild": false,
                "isParam": false,
                "name": "Edges",
                "path": ""
            },
            "cff83efa-9c8e-4ca1-8c0b-064e64025bbf": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "cff83efa-9c8e-4ca1-8c0b-064e64025bbf",
                "isChild": false,
                "isParam": false,
                "name": "Sensors",
                "path": ""
            },
            "d85cc08d-757e-4581-ab99-0d209affa893": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "d85cc08d-757e-4581-ab99-0d209affa893",
                "isChild": false,
                "isParam": false,
                "name": "AlertConfig",
                "path": ""
            },
            "e6a9755d-5dd1-4d3d-9b6d-c159654678a1": {
                "children": [],
                "defaultValue": "",
                "href": "",
                "id": "e6a9755d-5dd1-4d3d-9b6d-c159654678a1",
                "isChild": false,
                "isParam": false,
                "name": "SensorChart",
                "path": ""
            }
        },
        "paneGridWidgetLayouts": {
            "10954c88-1392-40b9-ba5e-215c45f42068": {
                "lg": [
                    {
                        "h": 9,
                        "i": "27241d41-891d-4e6a-a2ec-294f88f902a2",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "1570b53a-18f8-4383-bafd-d1ab7224d977": {
                "lg": [
                    {
                        "h": 9,
                        "i": "3cb0fe04-1d37-4ead-b02f-70fb721031f8",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "1ec32985-fee4-4383-a261-127f5c6575fc": {
                "lg": [
                    {
                        "h": 9,
                        "i": "1712fe35-443e-44e8-96f1-c4ed1d687256",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "24b04a3f-425f-45b8-ab26-ec448c304989": {
                "lg": [
                    {
                        "h": 9,
                        "i": "3c35227e-ffe4-41d1-91c4-fca90af20c05",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "dd96d379-2def-41f6-b780-a05cb98c8113",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 9
                    }
                ],
                "md": [
                    {
                        "h": 9,
                        "i": "3c35227e-ffe4-41d1-91c4-fca90af20c05",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "dd96d379-2def-41f6-b780-a05cb98c8113",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 9
                    }
                ],
                "sm": [
                    {
                        "h": 6,
                        "i": "3c35227e-ffe4-41d1-91c4-fca90af20c05",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 22,
                        "i": "dd96d379-2def-41f6-b780-a05cb98c8113",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 6
                    }
                ],
                "xs": [],
                "xxs": []
            },
            "2e48ba99-a230-4cef-8ba1-15ce54c92d8d": {
                "lg": [
                    {
                        "h": 9,
                        "i": "39841ebe-229f-4236-a191-1f2211e90966",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "3009f0d5-55fa-471c-ae3a-77fdf43e8e20": {
                "lg": [
                    {
                        "h": 9,
                        "i": "14b20e2c-f265-4761-a76d-52e0d15ddc8a",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "3667bf06-7abe-4486-8dcd-03b23e4fff12": {
                "lg": [
                    {
                        "h": 15,
                        "i": "8c09e1ae-4fe4-41df-bfee-6b8f52e27973",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 12,
                        "i": "075b1b81-9d20-41ac-a046-b71048aeffc8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 15
                    },
                    {
                        "h": 20,
                        "i": "6e15bceb-4fec-4e88-87fa-76d5cfdcdfb6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 2,
                        "y": 15
                    },
                    {
                        "h": 15,
                        "i": "f469e03c-4bf1-422c-9103-a889b1cc746b",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 3,
                        "y": 0
                    },
                    {
                        "h": 15,
                        "i": "03bddaf2-0193-494b-9703-96e55f15bf8e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 9,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 15,
                        "i": "8c09e1ae-4fe4-41df-bfee-6b8f52e27973",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 12,
                        "i": "075b1b81-9d20-41ac-a046-b71048aeffc8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 15
                    },
                    {
                        "h": 20,
                        "i": "6e15bceb-4fec-4e88-87fa-76d5cfdcdfb6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 30
                    },
                    {
                        "h": 15,
                        "i": "f469e03c-4bf1-422c-9103-a889b1cc746b",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 3,
                        "y": 0
                    },
                    {
                        "h": 15,
                        "i": "03bddaf2-0193-494b-9703-96e55f15bf8e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 7,
                        "y": 15
                    }
                ],
                "sm": [
                    {
                        "h": 15,
                        "i": "8c09e1ae-4fe4-41df-bfee-6b8f52e27973",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 12,
                        "i": "075b1b81-9d20-41ac-a046-b71048aeffc8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 30
                    },
                    {
                        "h": 20,
                        "i": "6e15bceb-4fec-4e88-87fa-76d5cfdcdfb6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 42
                    },
                    {
                        "h": 15,
                        "i": "f469e03c-4bf1-422c-9103-a889b1cc746b",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 15
                    },
                    {
                        "h": 15,
                        "i": "03bddaf2-0193-494b-9703-96e55f15bf8e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 3,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 16,
                        "i": "8c09e1ae-4fe4-41df-bfee-6b8f52e27973",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 15,
                        "i": "075b1b81-9d20-41ac-a046-b71048aeffc8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 26
                    },
                    {
                        "h": 20,
                        "i": "6e15bceb-4fec-4e88-87fa-76d5cfdcdfb6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 41
                    },
                    {
                        "h": 10,
                        "i": "f469e03c-4bf1-422c-9103-a889b1cc746b",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 16
                    },
                    {
                        "h": 15,
                        "i": "03bddaf2-0193-494b-9703-96e55f15bf8e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 16,
                        "i": "8c09e1ae-4fe4-41df-bfee-6b8f52e27973",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 15,
                        "i": "075b1b81-9d20-41ac-a046-b71048aeffc8",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 41
                    },
                    {
                        "h": 20,
                        "i": "6e15bceb-4fec-4e88-87fa-76d5cfdcdfb6",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 56
                    },
                    {
                        "h": 10,
                        "i": "f469e03c-4bf1-422c-9103-a889b1cc746b",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 31
                    },
                    {
                        "h": 15,
                        "i": "03bddaf2-0193-494b-9703-96e55f15bf8e",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 16
                    }
                ]
            },
            "3c6f225a-fd46-4405-9c2c-7b4251e27c6d": {
                "lg": [
                    {
                        "h": 9,
                        "i": "8d4b29b6-d387-4360-82a5-77f58bd0ba43",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "623b2161-0ce6-44f9-beeb-68813d3087cf": {
                "lg": [
                    {
                        "h": 9,
                        "i": "0e430953-59e8-4fb8-89f4-bf4a0280767f",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 9
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [
                    {
                        "h": 9,
                        "i": "0e430953-59e8-4fb8-89f4-bf4a0280767f",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 9
                    }
                ],
                "xxs": []
            },
            "65a17957-631b-4ae6-96fa-f1751eddc6b0": {
                "lg": [
                    {
                        "h": 9,
                        "i": "f386864a-28bf-48fc-b9cd-e07106705229",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 9,
                        "i": "ea99f967-27de-47fb-a09c-1e08e4df8a70",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 9
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [
                    {
                        "h": 10,
                        "i": "f386864a-28bf-48fc-b9cd-e07106705229",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "ea99f967-27de-47fb-a09c-1e08e4df8a70",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 9,
                        "i": "f386864a-28bf-48fc-b9cd-e07106705229",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    },
                    {
                        "h": 3,
                        "i": "ea99f967-27de-47fb-a09c-1e08e4df8a70",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    }
                ]
            },
            "6d3e21dd-6965-481b-82a3-9d1220685436": {
                "lg": [
                    {
                        "h": 9,
                        "i": "9163fdd6-86bb-42c2-b601-33a90ca6d10c",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "b56980a9-cdba-40d4-bee5-4109cfdab317": {
                "lg": [
                    {
                        "h": 9,
                        "i": "b480ad0c-fa1d-4f8d-8ef9-fd690b29b3c3",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "b62bc750-ba2a-4572-a46b-0edc443daa27": {
                "lg": [
                    {
                        "h": 9,
                        "i": "a4dda323-af9c-4256-bfbb-8d21badaff8a",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "d207199e-8c53-4c77-86a3-5605f4ee9667": {
                "lg": [
                    {
                        "h": 9,
                        "i": "36b6f3bf-fc42-4e02-b57e-f83b4fa656ad",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "d4be2c04-c5ff-4c4b-b2f7-d758a6a782fb": {
                "lg": [
                    {
                        "h": 9,
                        "i": "ab00839e-794c-4a65-bb6b-4bbbd5bd73d6",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "d77d3c6f-b2b5-4478-97e4-31cde6899342": {
                "lg": [
                    {
                        "h": 13,
                        "i": "7e2d9494-5297-4d92-a024-0b19e9aff4a3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 9,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 14,
                        "i": "5c502a4b-0bdf-48d0-8f0e-a6a6092c97d7",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 9,
                        "y": 0
                    },
                    {
                        "h": 23,
                        "i": "71331538-843f-43fa-a61a-a26615bdb609",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 14
                    }
                ],
                "md": [
                    {
                        "h": 14,
                        "i": "7e2d9494-5297-4d92-a024-0b19e9aff4a3",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 8,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 14,
                        "i": "5c502a4b-0bdf-48d0-8f0e-a6a6092c97d7",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 8,
                        "y": 0
                    },
                    {
                        "h": 23,
                        "i": "71331538-843f-43fa-a61a-a26615bdb609",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 14
                    }
                ],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "e24dd291-1b7d-42d2-8e3b-ae44d2d797b1": {
                "lg": [
                    {
                        "h": 28,
                        "i": "4e5107fd-44a2-4efa-87b3-e5358e075dbb",
                        "minH": 3,
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "f788e2ba-4381-4cde-b3e8-746ebd168fab": {
                "lg": [
                    {
                        "h": 9,
                        "i": "8fa00b9f-d03a-48eb-8efb-a3ca43694730",
                        "minH": 3,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [],
                "sm": [],
                "xs": [],
                "xxs": []
            }
        },
        "paneLayouts": {
            "28292b55-3181-4d6a-aee9-d2a2d9e6a30f": {
                "lg": [
                    {
                        "h": 6,
                        "i": "fb4b7774-2df6-43be-ac1e-d5187df2b145",
                        "moved": false,
                        "static": false,
                        "w": 8,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 6,
                        "i": "a2fac9f5-d4bb-4890-915a-6902b9b94736",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 8,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 5,
                        "i": "fb4b7774-2df6-43be-ac1e-d5187df2b145",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "a2fac9f5-d4bb-4890-915a-6902b9b94736",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 6,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 5,
                        "i": "fb4b7774-2df6-43be-ac1e-d5187df2b145",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "a2fac9f5-d4bb-4890-915a-6902b9b94736",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 3,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 5,
                        "i": "fb4b7774-2df6-43be-ac1e-d5187df2b145",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "a2fac9f5-d4bb-4890-915a-6902b9b94736",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 5,
                        "i": "fb4b7774-2df6-43be-ac1e-d5187df2b145",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "a2fac9f5-d4bb-4890-915a-6902b9b94736",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 5
                    }
                ]
            },
            "311d6f86-a496-4dbd-a480-c4cce54162ec": {
                "lg": [
                    {
                        "h": 5,
                        "i": "2aef87a7-c911-4df9-ac77-87b2c29a3256",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "96da9a89-5b71-4d12-91e7-17f443135199",
                        "moved": false,
                        "static": false,
                        "w": 7,
                        "x": 5,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 5,
                        "i": "2aef87a7-c911-4df9-ac77-87b2c29a3256",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 5,
                        "i": "96da9a89-5b71-4d12-91e7-17f443135199",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 5,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 4,
                        "i": "2aef87a7-c911-4df9-ac77-87b2c29a3256",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "96da9a89-5b71-4d12-91e7-17f443135199",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 3,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 4,
                        "i": "2aef87a7-c911-4df9-ac77-87b2c29a3256",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "96da9a89-5b71-4d12-91e7-17f443135199",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 3,
                        "i": "2aef87a7-c911-4df9-ac77-87b2c29a3256",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "96da9a89-5b71-4d12-91e7-17f443135199",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 3
                    }
                ]
            },
            "939c24f8-00c5-4624-a1dc-80a758356f3e": {
                "lg": [
                    {
                        "h": 4,
                        "i": "67a5b65b-9a81-409d-a14e-c8cf3a93d50c",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "95ba15f8-b029-4574-b760-b4ac4be26b0c",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 6,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 4,
                        "i": "67a5b65b-9a81-409d-a14e-c8cf3a93d50c",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "95ba15f8-b029-4574-b760-b4ac4be26b0c",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 5,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 4,
                        "i": "67a5b65b-9a81-409d-a14e-c8cf3a93d50c",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "95ba15f8-b029-4574-b760-b4ac4be26b0c",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 3,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 4,
                        "i": "67a5b65b-9a81-409d-a14e-c8cf3a93d50c",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "95ba15f8-b029-4574-b760-b4ac4be26b0c",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 4,
                        "i": "67a5b65b-9a81-409d-a14e-c8cf3a93d50c",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "95ba15f8-b029-4574-b760-b4ac4be26b0c",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 4
                    }
                ]
            },
            "Home": {
                "lg": [
                    {
                        "h": 2,
                        "i": "6b880471-1ef5-4fa5-a3c5-3ac8c6296efa",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "2941b54e-e3fd-4bd8-808d-8fc4dbb87896",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 5,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "74c22757-ee5e-40d5-944f-84d3a016c3c8",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 9,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "61e0df0f-2966-4d5e-96b2-9df7057cc58e",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 2
                    }
                ],
                "md": [
                    {
                        "h": 2,
                        "i": "6b880471-1ef5-4fa5-a3c5-3ac8c6296efa",
                        "moved": false,
                        "static": false,
                        "w": 5,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "2941b54e-e3fd-4bd8-808d-8fc4dbb87896",
                        "moved": false,
                        "static": false,
                        "w": 3,
                        "x": 5,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "74c22757-ee5e-40d5-944f-84d3a016c3c8",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 8,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "61e0df0f-2966-4d5e-96b2-9df7057cc58e",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 2
                    }
                ],
                "sm": [
                    {
                        "h": 2,
                        "i": "6b880471-1ef5-4fa5-a3c5-3ac8c6296efa",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "2941b54e-e3fd-4bd8-808d-8fc4dbb87896",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "74c22757-ee5e-40d5-944f-84d3a016c3c8",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 4,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "61e0df0f-2966-4d5e-96b2-9df7057cc58e",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 2
                    }
                ],
                "xs": [
                    {
                        "h": 2,
                        "i": "6b880471-1ef5-4fa5-a3c5-3ac8c6296efa",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "2941b54e-e3fd-4bd8-808d-8fc4dbb87896",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 2
                    },
                    {
                        "h": 2,
                        "i": "74c22757-ee5e-40d5-944f-84d3a016c3c8",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 2
                    },
                    {
                        "h": 5,
                        "i": "61e0df0f-2966-4d5e-96b2-9df7057cc58e",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 4
                    }
                ],
                "xxs": [
                    {
                        "h": 2,
                        "i": "6b880471-1ef5-4fa5-a3c5-3ac8c6296efa",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 2,
                        "i": "2941b54e-e3fd-4bd8-808d-8fc4dbb87896",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 2
                    },
                    {
                        "h": 2,
                        "i": "74c22757-ee5e-40d5-944f-84d3a016c3c8",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 4
                    },
                    {
                        "h": 5,
                        "i": "61e0df0f-2966-4d5e-96b2-9df7057cc58e",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 6
                    }
                ]
            },
            "c596d9fa-86b3-4eaa-a111-c0e80a2f7281": {
                "lg": [
                    {
                        "h": 4,
                        "i": "703554eb-1cc0-4ad7-a17d-18badb9e0bd1",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "51d1ac4d-9b05-4b33-afc8-d0cf2f9f4e40",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 6,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 4,
                        "i": "703554eb-1cc0-4ad7-a17d-18badb9e0bd1",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "51d1ac4d-9b05-4b33-afc8-d0cf2f9f4e40",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 4,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 4,
                        "i": "703554eb-1cc0-4ad7-a17d-18badb9e0bd1",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "51d1ac4d-9b05-4b33-afc8-d0cf2f9f4e40",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 4,
                        "i": "703554eb-1cc0-4ad7-a17d-18badb9e0bd1",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "51d1ac4d-9b05-4b33-afc8-d0cf2f9f4e40",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 4,
                        "i": "703554eb-1cc0-4ad7-a17d-18badb9e0bd1",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "51d1ac4d-9b05-4b33-afc8-d0cf2f9f4e40",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 4
                    }
                ]
            },
            "cff83efa-9c8e-4ca1-8c0b-064e64025bbf": {
                "lg": [
                    {
                        "h": 4,
                        "i": "6735082f-0979-44da-8d9e-27c1fd6e1483",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "20945413-c290-4c7f-b541-20256ed15e4d",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 6,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 4,
                        "i": "6735082f-0979-44da-8d9e-27c1fd6e1483",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "20945413-c290-4c7f-b541-20256ed15e4d",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 6,
                        "y": 0
                    }
                ],
                "sm": [
                    {
                        "h": 4,
                        "i": "6735082f-0979-44da-8d9e-27c1fd6e1483",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "20945413-c290-4c7f-b541-20256ed15e4d",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 4,
                        "y": 0
                    }
                ],
                "xs": [
                    {
                        "h": 4,
                        "i": "6735082f-0979-44da-8d9e-27c1fd6e1483",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "20945413-c290-4c7f-b541-20256ed15e4d",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 2,
                        "y": 0
                    }
                ],
                "xxs": [
                    {
                        "h": 4,
                        "i": "6735082f-0979-44da-8d9e-27c1fd6e1483",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 4,
                        "i": "20945413-c290-4c7f-b541-20256ed15e4d",
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 4
                    }
                ]
            },
            "d85cc08d-757e-4581-ab99-0d209affa893": {
                "lg": [
                    {
                        "h": 5,
                        "i": "fd59d383-c308-41eb-a4a3-89c807beba47",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 3,
                        "i": "eafdab9e-1359-4ab1-8df7-a38a2184430d",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 5
                    },
                    {
                        "h": 5,
                        "i": "74e5186c-6a42-4fa1-8cc2-b051f8b1952a",
                        "moved": false,
                        "static": false,
                        "w": 8,
                        "x": 4,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 5,
                        "i": "fd59d383-c308-41eb-a4a3-89c807beba47",
                        "moved": false,
                        "static": false,
                        "w": 4,
                        "x": 0,
                        "y": 0
                    },
                    {
                        "h": 3,
                        "i": "eafdab9e-1359-4ab1-8df7-a38a2184430d",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 5
                    },
                    {
                        "h": 5,
                        "i": "74e5186c-6a42-4fa1-8cc2-b051f8b1952a",
                        "moved": false,
                        "static": false,
                        "w": 6,
                        "x": 4,
                        "y": 0
                    }
                ],
                "sm": [],
                "xs": [],
                "xxs": []
            },
            "e6a9755d-5dd1-4d3d-9b6d-c159654678a1": {
                "lg": [
                    {
                        "h": 5,
                        "i": "9237c960-6a59-4236-bda1-5a26e3debc26",
                        "moved": false,
                        "static": false,
                        "w": 12,
                        "x": 0,
                        "y": 0
                    }
                ],
                "md": [
                    {
                        "h": 5,
                        "i": "9237c960-6a59-4236-bda1-5a26e3debc26",
                        "moved": false,
                        "static": false,
                        "w": 10,
                        "x": 0,
                        "y": 0
                    }
                ],
                "sm": [],
                "xs": [],
                "xxs": []
            }
        },
        "panes": {
            "20945413-c290-4c7f-b541-20256ed15e4d": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "20945413-c290-4c7f-b541-20256ed15e4d",
                "pageId": "cff83efa-9c8e-4ca1-8c0b-064e64025bbf",
                "tabInfo": {
                    "activeTab": "1ec32985-fee4-4383-a261-127f5c6575fc",
                    "tabIds": [
                        "1ec32985-fee4-4383-a261-127f5c6575fc"
                    ],
                    "tabTitles": {
                        "1ec32985-fee4-4383-a261-127f5c6575fc": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "2941b54e-e3fd-4bd8-808d-8fc4dbb87896": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "ALERTS"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "2941b54e-e3fd-4bd8-808d-8fc4dbb87896",
                "pageId": "Home",
                "tabInfo": {
                    "activeTab": "65a17957-631b-4ae6-96fa-f1751eddc6b0",
                    "tabIds": [
                        "65a17957-631b-4ae6-96fa-f1751eddc6b0"
                    ],
                    "tabTitles": {
                        "65a17957-631b-4ae6-96fa-f1751eddc6b0": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "2aef87a7-c911-4df9-ac77-87b2c29a3256": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "2aef87a7-c911-4df9-ac77-87b2c29a3256",
                "pageId": "311d6f86-a496-4dbd-a480-c4cce54162ec",
                "tabInfo": {
                    "activeTab": "3009f0d5-55fa-471c-ae3a-77fdf43e8e20",
                    "tabIds": [
                        "3009f0d5-55fa-471c-ae3a-77fdf43e8e20"
                    ],
                    "tabTitles": {
                        "3009f0d5-55fa-471c-ae3a-77fdf43e8e20": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "51d1ac4d-9b05-4b33-afc8-d0cf2f9f4e40": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "51d1ac4d-9b05-4b33-afc8-d0cf2f9f4e40",
                "pageId": "c596d9fa-86b3-4eaa-a111-c0e80a2f7281",
                "tabInfo": {
                    "activeTab": "6d3e21dd-6965-481b-82a3-9d1220685436",
                    "tabIds": [
                        "6d3e21dd-6965-481b-82a3-9d1220685436"
                    ],
                    "tabTitles": {
                        "6d3e21dd-6965-481b-82a3-9d1220685436": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "61e0df0f-2966-4d5e-96b2-9df7057cc58e": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "61e0df0f-2966-4d5e-96b2-9df7057cc58e",
                "pageId": "Home",
                "tabInfo": {
                    "activeTab": "3667bf06-7abe-4486-8dcd-03b23e4fff12",
                    "tabIds": [
                        "3667bf06-7abe-4486-8dcd-03b23e4fff12"
                    ],
                    "tabTitles": {
                        "3667bf06-7abe-4486-8dcd-03b23e4fff12": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "6735082f-0979-44da-8d9e-27c1fd6e1483": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "6735082f-0979-44da-8d9e-27c1fd6e1483",
                "pageId": "cff83efa-9c8e-4ca1-8c0b-064e64025bbf",
                "tabInfo": {
                    "activeTab": "e24dd291-1b7d-42d2-8e3b-ae44d2d797b1",
                    "tabIds": [
                        "e24dd291-1b7d-42d2-8e3b-ae44d2d797b1"
                    ],
                    "tabTitles": {
                        "e24dd291-1b7d-42d2-8e3b-ae44d2d797b1": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "67a5b65b-9a81-409d-a14e-c8cf3a93d50c": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "67a5b65b-9a81-409d-a14e-c8cf3a93d50c",
                "pageId": "939c24f8-00c5-4624-a1dc-80a758356f3e",
                "tabInfo": {
                    "activeTab": "1570b53a-18f8-4383-bafd-d1ab7224d977",
                    "tabIds": [
                        "1570b53a-18f8-4383-bafd-d1ab7224d977"
                    ],
                    "tabTitles": {
                        "1570b53a-18f8-4383-bafd-d1ab7224d977": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "6b880471-1ef5-4fa5-a3c5-3ac8c6296efa": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "LOCATIONS"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "6b880471-1ef5-4fa5-a3c5-3ac8c6296efa",
                "pageId": "Home",
                "tabInfo": {
                    "activeTab": "b62bc750-ba2a-4572-a46b-0edc443daa27",
                    "tabIds": [
                        "b62bc750-ba2a-4572-a46b-0edc443daa27"
                    ],
                    "tabTitles": {
                        "b62bc750-ba2a-4572-a46b-0edc443daa27": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "703554eb-1cc0-4ad7-a17d-18badb9e0bd1": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "703554eb-1cc0-4ad7-a17d-18badb9e0bd1",
                "pageId": "c596d9fa-86b3-4eaa-a111-c0e80a2f7281",
                "tabInfo": {
                    "activeTab": "623b2161-0ce6-44f9-beeb-68813d3087cf",
                    "tabIds": [
                        "623b2161-0ce6-44f9-beeb-68813d3087cf"
                    ],
                    "tabTitles": {
                        "623b2161-0ce6-44f9-beeb-68813d3087cf": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "74c22757-ee5e-40d5-944f-84d3a016c3c8": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": "MESSAGES"
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "74c22757-ee5e-40d5-944f-84d3a016c3c8",
                "pageId": "Home",
                "tabInfo": {
                    "activeTab": "d207199e-8c53-4c77-86a3-5605f4ee9667",
                    "tabIds": [
                        "d207199e-8c53-4c77-86a3-5605f4ee9667"
                    ],
                    "tabTitles": {
                        "d207199e-8c53-4c77-86a3-5605f4ee9667": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "74e5186c-6a42-4fa1-8cc2-b051f8b1952a": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "74e5186c-6a42-4fa1-8cc2-b051f8b1952a",
                "pageId": "d85cc08d-757e-4581-ab99-0d209affa893",
                "tabInfo": {
                    "activeTab": "3c6f225a-fd46-4405-9c2c-7b4251e27c6d",
                    "tabIds": [
                        "3c6f225a-fd46-4405-9c2c-7b4251e27c6d"
                    ],
                    "tabTitles": {
                        "3c6f225a-fd46-4405-9c2c-7b4251e27c6d": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "9237c960-6a59-4236-bda1-5a26e3debc26": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "9237c960-6a59-4236-bda1-5a26e3debc26",
                "pageId": "e6a9755d-5dd1-4d3d-9b6d-c159654678a1",
                "tabInfo": {
                    "activeTab": "d77d3c6f-b2b5-4478-97e4-31cde6899342",
                    "tabIds": [
                        "d77d3c6f-b2b5-4478-97e4-31cde6899342"
                    ],
                    "tabTitles": {
                        "d77d3c6f-b2b5-4478-97e4-31cde6899342": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "95ba15f8-b029-4574-b760-b4ac4be26b0c": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "95ba15f8-b029-4574-b760-b4ac4be26b0c",
                "pageId": "939c24f8-00c5-4624-a1dc-80a758356f3e",
                "tabInfo": {
                    "activeTab": "2e48ba99-a230-4cef-8ba1-15ce54c92d8d",
                    "tabIds": [
                        "2e48ba99-a230-4cef-8ba1-15ce54c92d8d"
                    ],
                    "tabTitles": {
                        "2e48ba99-a230-4cef-8ba1-15ce54c92d8d": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "96da9a89-5b71-4d12-91e7-17f443135199": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "96da9a89-5b71-4d12-91e7-17f443135199",
                "pageId": "311d6f86-a496-4dbd-a480-c4cce54162ec",
                "tabInfo": {
                    "activeTab": "d4be2c04-c5ff-4c4b-b2f7-d758a6a782fb",
                    "tabIds": [
                        "d4be2c04-c5ff-4c4b-b2f7-d758a6a782fb"
                    ],
                    "tabTitles": {
                        "d4be2c04-c5ff-4c4b-b2f7-d758a6a782fb": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "a2fac9f5-d4bb-4890-915a-6902b9b94736": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "a2fac9f5-d4bb-4890-915a-6902b9b94736",
                "pageId": "28292b55-3181-4d6a-aee9-d2a2d9e6a30f",
                "tabInfo": {
                    "activeTab": "b56980a9-cdba-40d4-bee5-4109cfdab317",
                    "tabIds": [
                        "b56980a9-cdba-40d4-bee5-4109cfdab317"
                    ],
                    "tabTitles": {
                        "b56980a9-cdba-40d4-bee5-4109cfdab317": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "eafdab9e-1359-4ab1-8df7-a38a2184430d": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "eafdab9e-1359-4ab1-8df7-a38a2184430d",
                "pageId": "d85cc08d-757e-4581-ab99-0d209affa893",
                "tabInfo": {
                    "activeTab": "24b04a3f-425f-45b8-ab26-ec448c304989",
                    "tabIds": [
                        "24b04a3f-425f-45b8-ab26-ec448c304989"
                    ],
                    "tabTitles": {
                        "24b04a3f-425f-45b8-ab26-ec448c304989": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "fb4b7774-2df6-43be-ac1e-d5187df2b145": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "fb4b7774-2df6-43be-ac1e-d5187df2b145",
                "pageId": "28292b55-3181-4d6a-aee9-d2a2d9e6a30f",
                "tabInfo": {
                    "activeTab": "10954c88-1392-40b9-ba5e-215c45f42068",
                    "tabIds": [
                        "10954c88-1392-40b9-ba5e-215c45f42068"
                    ],
                    "tabTitles": {
                        "10954c88-1392-40b9-ba5e-215c45f42068": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            },
            "fd59d383-c308-41eb-a4a3-89c807beba47": {
                "customPaneId": "",
                "header": {
                    "hide": false,
                    "title": ""
                },
                "hiddenBreakpoints": {},
                "hideBorders": false,
                "id": "fd59d383-c308-41eb-a4a3-89c807beba47",
                "pageId": "d85cc08d-757e-4581-ab99-0d209affa893",
                "tabInfo": {
                    "activeTab": "f788e2ba-4381-4cde-b3e8-746ebd168fab",
                    "tabIds": [
                        "f788e2ba-4381-4cde-b3e8-746ebd168fab"
                    ],
                    "tabTitles": {
                        "f788e2ba-4381-4cde-b3e8-746ebd168fab": "Double Click"
                    },
                    "tabbed": false
                },
                "themeType": "primary"
            }
        },
        "savedPortalExists": true,
        "theme": {
            "graph": {
                "four": "#E8E7C6",
                "one": "#6E8592",
                "three": "#DBA5A8",
                "two": "#6E93A8"
            },
            "info": {
                "display_name": "Standard",
                "name": "STANDARD_THEME"
            },
            "items": {
                "main": {
                    "header": {
                        "burgerBars": {
                            "fontColor": "#f5f5f5",
                            "visible": true
                        },
                        "dropdown": {
                            "fontColor": "#f5f5f5",
                            "fontFamily": "Helvetica",
                            "fontSize": 18
                        },
                        "styles": {
                            "backgroundColor": "#6e8592"
                        }
                    },
                    "panes": {
                        "flyout": {
                            "body": {
                                "backgroundColor": "#f5f5f5"
                            },
                            "header": {
                                "backgroundColor": "#6e8592"
                            }
                        },
                        "primary": {
                            "body": {
                                "backgroundColor": "#f5f5f5"
                            },
                            "header": {
                                "backgroundColor": "#6e8592",
                                "fontColor": "#000000",
                                "fontFamily": "Helvetica"
                            },
                            "tabs": {
                                "activeTabUnderlineColor": "#425864",
                                "backgroundColor": "#9db5c2",
                                "fontColor": "#000000"
                            }
                        },
                        "secondary": {
                            "body": {
                                "backgroundColor": "#f5f5f5"
                            },
                            "header": {
                                "backgroundColor": "#9db5c2",
                                "fontColor": "#000000",
                                "fontFamily": "Helvetica"
                            },
                            "tabs": {
                                "activeTabUnderlineColor": "#425864",
                                "backgroundColor": "#6e8592",
                                "fontColor": "#000000"
                            }
                        }
                    },
                    "portal": {
                        "styles": {
                            "backgroundColor": "#ffffff"
                        }
                    },
                    "widgets": {
                        "BAR_CHART_WIDGET_COMPONENT": {
                            "barColors": [
                                {
                                    "fill": "#6E8592"
                                },
                                {
                                    "fill": "#6E93A8"
                                },
                                {
                                    "fill": "#DBA5A8"
                                },
                                {
                                    "fill": "#E8E7C6"
                                }
                            ],
                            "brushStroke": "#6e8592",
                            "legendColor": "#000000"
                        },
                        "BUTTON_WIDGET_COMPONENT": {
                            "backgroundColor": "#f5f5f5",
                            "backgroundHoverColor": "#c2c2c2",
                            "borderColor": "#cccccc",
                            "fontColor": "#000000"
                        },
                        "FILTERABLE_LIST_WIDGET_COMPONENT": {
                            "activeItemBackgroundColor": "#6e8592",
                            "activeItemFontColor": "#ffffff",
                            "bulletColor": "#000000",
                            "fontColor": "#000000",
                            "listItemBackgroundColor": "#ffffff",
                            "titleColor": "#000000"
                        },
                        "FORM_WIDGET_COMPONENT": {
                            "cardBackgroundColor": "#f5f5f5",
                            "fontColor": "#000000",
                            "sliderColor": "#6E8592",
                            "titleColor": "#000000",
                            "toggleColor": "#6E8592"
                        },
                        "GOOGLE_MAP_WIDGET_COMPONENT": {
                            "mapTheme": ""
                        },
                        "GROUPING_LIST_WIDGET_COMPONENT": {
                            "activeItemBackgroundColor": "#6e8592",
                            "activeItemFontColor": "#ffffff",
                            "bulletColor": "#000000",
                            "fontColor": "#000000",
                            "listItemBackgroundColor": "#ffffff",
                            "titleColor": "#000000"
                        },
                        "LINE_CHART_WIDGET_COMPONENT": {
                            "brushStroke": "#6e8592",
                            "legendColor": "#000000",
                            "lineColors": [
                                {
                                    "stroke": "#6E8592"
                                },
                                {
                                    "stroke": "#6E93A8"
                                },
                                {
                                    "stroke": "#DBA5A8"
                                },
                                {
                                    "stroke": "#E8E7C6"
                                }
                            ]
                        },
                        "LIST_WIDGET_COMPONENT": {
                            "activeItemBackgroundColor": "#6e8592",
                            "activeItemFontColor": "#000000",
                            "fontColor": "#000000",
                            "listItemBackgroundColor": "#ffffff",
                            "titleColor": "#000000"
                        },
                        "PIE_CHART_WIDGET_COMPONENT": {
                            "cells": [
                                {
                                    "fill": "#6E8592"
                                },
                                {
                                    "fill": "#6E93A8"
                                },
                                {
                                    "fill": "#DBA5A8"
                                },
                                {
                                    "fill": "#E8E7C6"
                                }
                            ]
                        },
                        "RADIAL_GAUGE_WIDGET_COMPONENT": {
                            "backgroundColor": "#c2c2c2",
                            "progressColor": "#6e8592"
                        },
                        "SPEEDOMETER_WIDGET": {
                            "arrowColor": "#000000",
                            "sectionColors": [
                                {
                                    "fill": "#6E8592"
                                },
                                {
                                    "fill": "#6E93A8"
                                },
                                {
                                    "fill": "#DBA5A8"
                                },
                                {
                                    "fill": "#E8E7C6"
                                }
                            ]
                        },
                        "TEXT_WIDGET_COMPONENT": {
                            "fontColor": "#000000",
                            "fontFamily": "Helvetica",
                            "fontSize": 18
                        },
                        "TOGGLE_WIDGET": {
                            "backgroundColor": "#c2c2c2",
                            "fontColor": "#000000",
                            "offColor": "#ffffff",
                            "onColor": "#6e8592"
                        }
                    }
                }
            },
            "palette": {
                "darkPrimary": "#c2c2c2",
                "darkSecondary": "#425864",
                "defaultPrimary": "#f5f5f5",
                "defaultSecondary": "#6e8592",
                "lightPrimary": "#ffffff",
                "lightSecondary": "#9db5c2",
                "primaryText": "#000000",
                "secondaryText": "#000000"
            }
        },
        "upgradesPerformed": {
            "flyoutTitleUpgrade": true,
            "headerBrandUpgrade": true,
            "headerTitleUpgrade": true,
            "widgetResizeUpgrade": true
        },
        "widgets": {
            "03bddaf2-0193-494b-9703-96e55f15bf8e": {
                "externalScripts": [],
                "id": "03bddaf2-0193-494b-9703-96e55f15bf8e",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#f5f5f5",
                    "compactForm": true,
                    "displayColumn": "name",
                    "editColumns": {
                        "address": {
                            "dataType": "string",
                            "display": true,
                            "key": "095dc5b4-1896-4d88-afcb-d3fbdf537550",
                            "label": "Address",
                            "name": "address",
                            "orderIdx": 3
                        },
                        "description": {
                            "dataType": "string",
                            "display": true,
                            "key": "4840abbe-954d-4b01-81f7-97ffc7b25a3a",
                            "label": "Description",
                            "name": "description",
                            "orderIdx": 2
                        },
                        "latlng": {
                            "dataType": "string",
                            "display": true,
                            "key": "dfc20402-8217-4626-9a53-c9d114079e8f",
                            "label": "Coordinates",
                            "name": "latlng",
                            "orderIdx": 4
                        },
                        "name": {
                            "dataType": "string",
                            "display": true,
                            "key": "e4ad2673-4d40-4988-b61e-74447be071b9",
                            "label": "Name",
                            "name": "name",
                            "orderIdx": 1
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "fontColor": "#000000",
                    "htmlId": "selectedAssetMetadata",
                    "isReadOnly": true,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "81e54cbd-7409-4350-9b44-2a1027324570",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return datasources.getLocationById.sendData({\n    location_id: this.datasource.location_id\n}).then((resp) =\u003e {\n    const loc = resp.results.DATA[0]\n    return {\n        data: {\n            ...this.datasource,\n            latlng: `${loc.lat}, ${loc.long}`,\n            address: loc.address,\n            locationName: loc.name\n        }\n    };\n})"
                        }
                    },
                    "noDataText": "Please select an asset from the list on the left",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "3667bf06-7abe-4486-8dcd-03b23e4fff12",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "075b1b81-9d20-41ac-a046-b71048aeffc8": {
                "externalScripts": [],
                "id": "075b1b81-9d20-41ac-a046-b71048aeffc8",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#f5f5f5",
                    "compactForm": false,
                    "displayColumn": "name",
                    "editColumns": {
                        "endDate": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "b8cd61ae-6e5c-4803-9d6a-4ffcecfe8955",
                            "label": "End Date",
                            "name": "endDate",
                            "options": {
                                "endDate": "2018-09-12T22:20:44.389Z"
                            },
                            "orderIdx": 2
                        },
                        "startDate": {
                            "dataType": "timestamp",
                            "defaultValue": "",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "7e6089e3-1908-482f-a9c4-2eb9d709b4bc",
                            "label": "Start Date",
                            "name": "startDate",
                            "options": {},
                            "orderIdx": 1
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "value": "console.log('submit');\nif (this.widget) {\n    console.log('this', this.widget);\n    const start = new Date(this.widget.data.startDate);\n    const end = new Date(this.widget.data.endDate);\n    datasources.sensorHistoryTimeRange.sendData({\n        startDate: start,\n        endDate: end\n    })\n    if (datasources.sensorHistoryIds.lastUpdated \u0026\u0026 datasources.sensorHistoryIds.latestData().length \u003e 0) {\n        datasources.getHistoryForSensors.sendData({\n            sensor_ids: datasources.sensorHistoryIds.latestData(),\n            startTime: start.toISOString(),\n            endTime: end.toISOString()\n        })\n    }\n\n}\nreturn;"
                    },
                    "fontColor": "#000000",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "b768793e-6e0b-4d94-9a95-abfe8e750bcb",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return {data: this.datasource};"
                        }
                    },
                    "listTitle": "History",
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "3667bf06-7abe-4486-8dcd-03b23e4fff12",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "0e430953-59e8-4fb8-89f4-bf4a0280767f": {
                "externalScripts": [],
                "id": "0e430953-59e8-4fb8-89f4-bf4a0280767f",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "104a5846-dd20-4402-aa39-e39d4afeae2f",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eEdges\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"edge-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "if (!this.datasource.Edges) return\n\nconst listItems = this.datasource.Edges\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n    console.log(data)\n    const selected = this.datasource.currentEdgeId === data.name;\n    return `\n    \u003ctr class=\"edge-item selectable-list-item ${selected ? 'selected' : ''}\" data-item-id=\"${data.name}\"\u003e\n      \u003ctd\u003e\n      ${data.name\n        //       \u003cdiv class=\"form-check\"\u003e\n        //   \u003cbutton class=\"btn btn-link py-0 px-2 delete-edge\" data-item-id=\"${data.name}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        // \u003c/div\u003e\n      }\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n$(\"#edge-list\").html(listItems)\n\nif (!window.hasSetupEdgeListListeners) {\n  window.hasSetupEdgeListListeners = true\n  $(\"#edge-list\").html(listItems)\n  $(\"body\").on('click', '.delete-edge', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this edge?')) {\n      datasources.deleteEdge.sendData({ name: currentTarget.dataset.itemId }).then(() =\u003e {\n        // datasources.getEdges.sendData({ customer_id: datasources.currentCustomer.latestData().item_id })\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.edge-item', ({ currentTarget }) =\u003e {\n    datasources.currentEdgeId.sendData(currentTarget.dataset.itemId)\n  })\n\n  $(\"body\").on('click', '.location-link', ({ currentTarget }) =\u003e {\n    CB_PORTAL.selectPage(`/locations`)\n    datasources.currentLocation.sendData(currentTarget.dataset.itemId)\n  })\n}"
                            }
                        }
                    }
                },
                "tab": "623b2161-0ce6-44f9-beeb-68813d3087cf",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "14b20e2c-f265-4761-a76d-52e0d15ddc8a": {
                "externalScripts": [],
                "id": "14b20e2c-f265-4761-a76d-52e0d15ddc8a",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "4cf06a9e-7983-41c2-95fd-89dc7830dfed",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eEmployees\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth width=\"50\"\u003e\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n      \u003cth width=\"80\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"employee-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "if (!this.datasource.getEmployees || !this.datasource.getEmployees.results) return\nconst listItems = this.datasource.getEmployees.results\n  .sort((d1, d2) =\u003e d1.first_name.toLowerCase() \u003e d2.first_name.toLowerCase())\n  .map((data) =\u003e {\n    const selected = this.datasource.selectedEmployee === data.email;\n\n    return `\n    \u003ctr class=\"employee-item selectable-list-item ${selected ? \"selected\" : ''}\" data-item-id=\"${data.email}\"\u003e\n    ${JSON.stringify(data)}\n    \u003ctd\u003e\u003cimg src=\"${data.photo}\" /\u003e\u003c/div\u003e\n    \u003c/td\u003e\n      \u003ctd\u003e\n           ${data.first_name} ${data.last_name}\n      \u003c/td\u003e\n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-employee\" data-item-id=\"${data.user_id}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n\n$(\"#employee-list\").html(listItems)\n\n\n\nif (!window.hasSetupEmployeeList) {\n  window.hasSetupEmployeeList = true\n  $(\"#employee-list\").html(listItems)\n  $(\"body\").on('click', '.delete-employee', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this employee?')) {\n      $.ajax({\n        url: CB_PORTAL.ClearBlade.URI + \"/api/v/1/user/info\",\n        type: 'DELETE',\n        data: JSON.stringify({user_id: currentTarget.dataset.itemId}),\n        headers: {\n          \"Clearblade-Usertoken\": CB_PORTAL.ClearBlade.user.authToken,\n          \"Clearblade-Systemkey\": CB_PORTAL.ClearBlade.systemKey,\n          \"Clearblade-Systemsecret\": \"secret\",\n        },\n      }).then(() =\u003e {\n        datasources.getEmployees.sendData()\n      })\n    }\n  })\n}\n\nif (!window.hasSubscribedToEmployeeClick) {\n  window.hasSubscribedToEmployeeClick = true;\n  $(\"body\").on('click', '.employee-item', ({ currentTarget }) =\u003e {\n    datasources.selectedEmployee.sendData(currentTarget.dataset.itemId)\n  })\n}\n"
                            }
                        }
                    }
                },
                "tab": "3009f0d5-55fa-471c-ae3a-77fdf43e8e20",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "1712fe35-443e-44e8-96f1-c4ed1d687256": {
                "externalScripts": [],
                "id": "1712fe35-443e-44e8-96f1-c4ed1d687256",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#f5f5f5",
                    "displayColumn": "",
                    "editColumns": {
                        "created_date": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "40563153-5d11-4604-b7fb-980f568d6855",
                            "label": "Created date",
                            "name": "created_date",
                            "orderIdx": 8
                        },
                        "edge_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "typeAhead",
                            "key": "00310b95-25b9-48a1-b93f-e397a1c36988",
                            "label": "Edge",
                            "name": "edge_id",
                            "orderIdx": 4
                        },
                        "name": {
                            "dataType": "string",
                            "display": true,
                            "errorText": "Cannot have spaces",
                            "key": "56e06f5d-00df-4c95-aa52-f526af7363c0",
                            "label": "ID",
                            "name": "name",
                            "orderIdx": 3,
                            "regexValidation": "^\\S*$",
                            "required": true,
                            "validationType": "customRegEx",
                            "widthPercent": "50"
                        },
                        "reading_time": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "97644133-7f1e-49fb-9db7-1d054287a397",
                            "label": "Last reading date",
                            "name": "reading_time",
                            "orderIdx": 6,
                            "widthPercent": "50"
                        },
                        "sensor_label": {
                            "dataType": "string",
                            "display": true,
                            "key": "798367a2-9f93-4c01-94b2-f3816de24f47",
                            "label": "Label",
                            "name": "sensor_label",
                            "orderIdx": 1,
                            "required": true
                        },
                        "sensor_reading": {
                            "dataType": "string",
                            "display": true,
                            "key": "e9a3f09d-ff02-43b4-aa90-bef11f4f6e70",
                            "label": "Last reading",
                            "name": "sensor_reading",
                            "orderIdx": 5,
                            "widthPercent": "50"
                        },
                        "sensor_type_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "typeAhead",
                            "key": "dd272629-28b2-45ad-aa25-1b9e39eb66d3",
                            "label": "Sensor Type",
                            "name": "sensor_type_id",
                            "orderIdx": 2,
                            "required": true,
                            "widthPercent": "50"
                        },
                        "title": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "HTML",
                            "key": "d523e32f-bb8a-47ca-8c74-32c70851c3d2",
                            "name": "title",
                            "orderIdx": 0,
                            "parser": {
                                "CSS": "",
                                "HTML": "\u003cdiv\u003e\n\u003ch3 id=\"my-sensor-title\"\u003e\u003c/h3\u003e\n\n\u003c/div\u003e",
                                "JavaScript": "const button = `\u003cdiv id=\"switch-to-add-sensor\" class=\"btn btn-link\"\u003eAdd Sensor\u003c/div\u003e`\n$(\"#my-sensor-title\").html(this.values.created_date ? `Update Sensor ${button}` : `Add Sensor`)\n\nif(!window.hasAddedSensorTitleListeners) {\n    window.hasAddedSensorTitleListeners = true\n    $('body').on('click', '#switch-to-add-sensor', (e) =\u003e {\n        e.preventDefault()\n        datasources.currentSensorId.sendData('none')\n    })\n}"
                            }
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "console.log(this.widget.data);\nconst { created_date, reading_time, name, ...data } = this.widget.data\nif(created_date) {\n    return datasources.updateSensor.sendData({ sensor_id: name, sensor: data }).then(function (res) {\n        datasources.getSensors.sendData()\n    if(res.results \u0026\u0026 res.results.err) {\n        throw('error: ', res.results)\n    }\n    if (res.success) {\n        console.log('Successfully created: ', res.results)\n    } else {\n        throw('error: ', res.results)\n    }\n    return res\n})\n\n}\n\nreturn datasources.createSensor.sendData({ sensor: { ...data, name }}).then(function (res) {\n     datasources.getSensors.sendData()\n    if(res.results \u0026\u0026 res.results.err) {\n        throw('error: ', res.results)\n    }\n    if (res.success) {\n        console.log('Successfully created: ', res.results)\n    } else {\n        throw('error: ', res.results)\n    }\n    return res\n})\n"
                    },
                    "fontColor": "#000000",
                    "htmlId": "sensor-form",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "87ed1327-a384-4a17-b003-387bf8d791cb",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "\n/**\n * @type {FormSourceObj}\n */\nvar formSourceObj = {\n  data: {},\n  overrideFieldSettings: {}\n};\n\nconst sensor = this.datasource.getSensors \u0026\u0026 this.datasource.getSensors.results.find(s =\u003e s.name == this.datasource.currentSensorId)\nif (sensor) {\n  const created_date = typeof sensor.created_date === 'number' ? (new Date(sensor.created_date * 1000)).toISOString() : sensor.created_date\n  formSourceObj.data = { ...sensor, created_date, reading_time: sensor.reading_time || '' }\n  formSourceObj.overrideFieldSettings = {\n    name: { isReadOnly: true },\n    created_date: { isReadOnly: true },\n    reading_time: { isReadOnly: true },\n    sensor_reading: { isReadOnly: true },\n  }\n} else {\n  formSourceObj.data = {}\n  formSourceObj.overrideFieldSettings = {\n    created_date: { display: false }\n  }\n}\n\nconst sensorTypes = datasources.getSensorTypes.latestData() \u0026\u0026 datasources.getSensorTypes.latestData().results.DATA.map(\n  d =\u003e ({ value: d.item_id, name: d.name })\n)\nformSourceObj.overrideFieldSettings.sensor_type_id = { dropdownOptions: sensorTypes }\n\nconst edgeNames = datasources.Edges.latestData() \u0026\u0026 datasources.Edges.latestData().map(\n  d =\u003e ({ value: d.name, name: d.name })\n)\nformSourceObj.overrideFieldSettings.edge_id = { dropdownOptions: edgeNames }\n\nreturn formSourceObj"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "1ec32985-fee4-4383-a261-127f5c6575fc",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "27241d41-891d-4e6a-a2ec-294f88f902a2": {
                "externalScripts": [],
                "id": "27241d41-891d-4e6a-a2ec-294f88f902a2",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "79e5b700-b68a-409d-8c7d-652644fbb9d8",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eLocations\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n       \u003cth scope=\"col\"\u003e\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eType\u003c/th\u003e\n      \u003cth scope=\"col\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"locations-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "if(!this.datasource.getLocations) return\n\nconst listItems = this.datasource.getLocations.results.DATA\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n    const selected = this.datasource.currentLocation === data.item_id\n    return `\n    \u003ctr class=\"location-item selectable-list-item ${selected ? 'selected' : ''}\" data-item-id=\"${data.item_id}\"\u003e\n      \u003ctd\u003e${data.icon \u0026\u0026 `\u003cimage src=${data.icon} style=\"height:60px;\"/\u003e`}\u003c/td\u003e\n      \u003ctd class=\"location-list-item\" data-item-id=\"${data.item_id}\"\u003e\n      ${data.name}\n      \u003cdiv class=\"text-muted\"\u003e${data.description}\u003c/div\u003e\n      \u003c/td\u003e\n      \u003ctd\u003e${data.location_type}\u003c/td\u003e\n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-location\" data-item-id=\"${data.item_id}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n$(\"#locations-list\").html(listItems)\n\nif (!window.hasSetupLocationListListeners) {\n  window.hasSetupLocationListListeners = true\n  $(\"#locations-list\").html(listItems)\n  $(\"body\").on('click', '.delete-location', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this location?')) {\n      datasources.deleteLocation.sendData({ location_id: currentTarget.dataset.itemId }).then(() =\u003e {\n        datasources.getLocations.sendData();\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.location-item', ({ currentTarget }) =\u003e {\n    datasources.currentLocation.sendData(currentTarget.dataset.itemId)\n  })\n}"
                            }
                        }
                    }
                },
                "tab": "10954c88-1392-40b9-ba5e-215c45f42068",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "36b6f3bf-fc42-4e02-b57e-f83b4fa656ad": {
                "externalScripts": [],
                "id": "36b6f3bf-fc42-4e02-b57e-f83b4fa656ad",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": "\n",
                            "HTML": "\u003cdiv class=\"messagesTitle text-center\"\u003e\n  \u003c/div\u003e\n \n  \u003ch4\u003eReceived\u003c/h4\u003e\n  \u003cdiv class=\"input-section\"\u003e\n    \u003cdiv id=\"MessageValue\" type=\"textarea\" class=\"form-control\" style=\"height:150px;overflow-y: scroll;\"\u003e\u003c/div\u003e\n  \u003c/div\u003e\n  \u003chr\u003e\n  \u003ch4\u003eNew\u003c/h4\u003e\n  Recipient\n  \u003cdiv class=\"input-section\"\u003e\n    \u003cselect name=\"employees\" id=\"employees\" type=\"select\" class=\"form-control\"\u003e\n      \n    \u003c/select\u003e\n  \u003c/div\u003e\n  Priority\n  \u003cdiv class=\"input-section\"\u003e\n    \u003cselect name=\"priority\" id=\"priority\" type=\"select\" class=\"form-control\"\u003e\n      \u003coption value=\"low\"\u003eLow\u003c/option\u003e\n      \u003coption value=\"medium\"\u003eMedium\u003c/option\u003e\n      \u003coption value=\"high\"\u003eHigh\u003c/option\u003e\n    \u003c/select\u003e\n  \u003c/div\u003e\n  Reply\n  \u003cdiv class=\"input-section\"\u003e\n    \u003cinput id=\"Message\" type=\"textarea\" class=\"form-control\"\u003e\u003c/input\u003e\n  \u003c/div\u003e\n  \u003cbr\u003e\n  \u003cbutton id=\"sendButton\" class=\"btn btn-primary btn-block\"\u003eSend\u003c/button\u003e",
                            "JavaScript": "try {\n    $('#employees').empty();\n    var employees = datasources.getEmployees.latestData().results;\n    for (var i = 0; i \u003c employees.length; i++) {\n        var val = employees[i].email;\n        var text = employees[i].first_name + \" \" + employees[i].last_name;\n        $('#employees').append($('\u003coption/\u003e', {\n            value: val,\n            text: text\n        }));\n    }\n} catch (e) {\n\n};\nvar postNewMessage = function (payload) {\n    console.log('post', payload);\n    var avatar = $(\"\u003cimg\u003e\u003c/img\u003e\");\n    avatar.css(\"width\", 50);\n    avatar.css(\"height\", 50);\n    avatar.css('border-radius', \"8px\")\n    avatar.attr(\"src\", payload.avatar)\n    var messageBox = $('\u003cdiv\u003e\u003c/div\u003e');\n    messageBox.css('padding-left', 8);\n    var titleBox = $(\"\u003cdiv\u003e\u003c/div\u003e\");\n    titleBox.css(\"font-weight\", \"bold\")\n\n    var titleName = $(\"\u003cspan\u003e\" + payload.senderName + \"\u003c/span\u003e\");\n    let messageDate = new Date();\n    try {\n        messageDate = new Date(payload.timestamp);\n    } catch (e) { }\n\n    var time = messageDate.getTime();\n    var hours = messageDate.getHours();\n    var titleTime = $(\"\u003cspan\u003e\" + messageDate.toLocaleTimeString(\"en-us\") + \"\u003c/span\u003e\");\n    titleTime.css(\"font-weight\", \"narrow\");\n    titleTime.css(\"padding-left\", 12);\n    titleTime.css(\"font-size\", 10)\n    titleBox.append(titleName);\n    titleBox.append(titleTime);\n    messageBox.append(titleBox);\n    var textBox = $(\"\u003cdiv\u003e\" + payload.text + \"\u003c/div\u003e\")\n    messageBox.append(textBox)\n    var parentBox = $(\"\u003cdiv\u003e\u003c/div\u003e\");\n    parentBox.css('padding', 0);\n    // parentBox.css('background-color','blue')\n    // parentBox.css('border', \"1px solid gray\")\n    // parentBox.css('border-radius', \"8px\")\n    parentBox.css('width', \"auto\")\n    parentBox.css('display', \"flex\");\n    parentBox.css(\"margin-bottom\", 8)\n    parentBox.append(avatar);\n    parentBox.append(messageBox)\n    $(\"#MessageValue\").append(parentBox);\n    $('#MessageValue').scrollTop($('#MessageValue')[0].scrollHeight);\n}\ndatasources.getEmployees.latestData.subscribe(function (data) {\n\n    $('#employees').empty();\n    var employees = datasources.getEmployees.latestData().results;\n    for (var i = 0; i \u003c employees.length; i++) {\n        var val = employees[i].email;\n        var text = employees[i].first_name + \" \" + employees[i].last_name;\n        $('#employees').append($('\u003coption/\u003e', {\n            value: val,\n            text: text\n        }));\n    }\n});\n\nconst msgReceived = (data) =\u003e {\n    console.log('received msg', data);\n    postNewMessage(JSON.parse(data));\n    datasources.getAlerts.sendData({});\n}\n\ndatasources.currentEmployee.latestData.subscribe(function (data) {\n    var currentEmployee = datasources.currentEmployee.latestData();\n    var newTopic = \"messaging/\" + currentEmployee.user_id;\n    console.log(newTopic)\n    setTimeout(() =\u003e {\n        datasources.userMessaging.settings({\n            ...datasources.userMessaging.settings(),\n            TOPIC_NAME: newTopic\n        });\n    }, 2000);\n    console.log(\"gonna subscribe myself to the userMessaging datasource\")\n    if (datasources.userMessaging.lastUpdated) {\n        try {\n            const mostRecentMsg = datasources.userMessaging.latestData();\n            msgReceived(mostRecentMsg);\n        } catch (e) { }\n    }\n    datasources.userMessaging.latestData.subscribe(msgReceived);\n});\n\n\n$(\"#sendButton\").click(function () {\n    var currentEmployee = datasources.currentEmployee.latestData();\n\n    var employee = $(\"#employees\").val();\n    var priority = $(\"#priority\").val();\n    var messageTypes = [\"internal\"];\n    if (priority == \"medium\") {\n        messageTypes.push(\"email\");\n    } else if (priority == \"high\") {\n        messageTypes.push(\"sms\");\n        messageTypes.push(\"email\");\n    }\n\n    var message = $(\"#Message\").val();\n\n    var params = {\n        messageTypes: messageTypes,\n        userEmails: [employee],\n        payload: message\n    }\n    datasources.sendMessage.sendData(params).then(function () {\n        $(\"#Message\").val(\"\");\n    })\n\n});\n"
                        }
                    }
                },
                "tab": "d207199e-8c53-4c77-86a3-5605f4ee9667",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "39841ebe-229f-4236-a191-1f2211e90966": {
                "externalScripts": [],
                "id": "39841ebe-229f-4236-a191-1f2211e90966",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#f5f5f5",
                    "displayColumn": "",
                    "editColumns": {
                        "attributes": {
                            "dataType": "string",
                            "display": true,
                            "key": "a39d7857-df76-4f14-9fc3-b42bbc67d977",
                            "label": "Units",
                            "name": "attributes",
                            "orderIdx": 2,
                            "widthPercent": "50"
                        },
                        "data_type": {
                            "dataType": "string",
                            "defaultValue": "int",
                            "display": true,
                            "dropdownOptions": [
                                {
                                    "name": "Number",
                                    "value": "int"
                                },
                                {
                                    "name": "True/False",
                                    "value": "bool"
                                }
                            ],
                            "inputType": "option",
                            "key": "b2c2d789-7de7-4760-806e-4402d1b4d10b",
                            "label": "Data Type",
                            "name": "data_type",
                            "orderIdx": 4,
                            "required": true
                        },
                        "description": {
                            "dataType": "string",
                            "display": true,
                            "key": "865b6202-9a29-4fae-8b89-62b727c3e406",
                            "label": "Description",
                            "name": "description",
                            "orderIdx": 3
                        },
                        "item_id": {
                            "dataType": "string",
                            "display": false,
                            "key": "ba2c7426-d12a-463d-9d65-76521459f1fb",
                            "name": "item_id",
                            "orderIdx": 6
                        },
                        "name": {
                            "dataType": "string",
                            "display": true,
                            "key": "2ef62458-1fb9-4f5b-9838-f1a8995b3c48",
                            "label": "Name",
                            "name": "name",
                            "orderIdx": 1,
                            "required": true,
                            "widthPercent": "50"
                        },
                        "title": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "HTML",
                            "key": "1c6cc18c-6897-45f3-86e3-c4dc69f08bc6",
                            "name": "title",
                            "orderIdx": 0,
                            "parser": {
                                "CSS": "",
                                "HTML": "\u003ch3 id=\"my-sensor-type-title\"\u003e\n\u003c/h3\u003e",
                                "JavaScript": "const button = `\u003cdiv id=\"switch-to-add-sensor\" class=\"btn btn-link\"\u003eAdd Sensor\u003c/div\u003e`\n$(\"#my-sensor-type-title\").html(this.values.item_id ? `Update Sensor Type ${button}` : `Add Sensor Type`)\n\nif(!window.hasAddedSensorTypeTitleListeners) {\n    window.hasAddedSensorTypeTitleListeners = true\n    $('body').on('click', '#switch-to-add-sensor', (e) =\u003e {\n        e.preventDefault()\n        datasources.currentSensorTypeId.sendData('none')\n    })\n}"
                            }
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "console.log(this.widget.data);\n\nif (this.widget.data.item_id) {\n    return datasources.updateSensorType.sendData({ \n        sensor_type_id: this.widget.data.item_id, \n        sensor_type: this.widget.data }\n    ).then(function (res) {\n        if (res.success) {\n            datasources.getSensorTypes.sendData()\n        } \n        return res\n    })\n} else {\n    return datasources.createSensorType.sendData({ sensor_type: this.widget.data }).then(function (res) {\n        if (res.success) {\n            datasources.getSensorTypes.sendData()\n            datasources.currentSensorTypeId.sendData(res.item_id)\n        }\n        return res\n    })\n}"
                    },
                    "fontColor": "#000000",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "40854ca9-c5d0-4594-8fa5-55e972d668d1",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "\n/**\n * @type {FormSourceObj}\n */\nvar formSourceObj = {\n  data: {},\n  overrideFieldSettings: {}\n};\n\n\nconst sensor = this.datasource.getSensorTypes \u0026\u0026 this.datasource.getSensorTypes.results.DATA.find(s =\u003e s.item_id == this.datasource.currentSensorTypeId)\nif (sensor) {\n  formSourceObj.data = sensor\n} else {\n  formSourceObj.data = {}\n  formSourceObj.overrideFieldSettings = {\n    created_date: { display: false }\n  }\n}\n\nformSourceObj.overrideFieldSettings.data_type = {\n  dropdownOptions: [\n    // { value: '', name: '--select--' },\n    { value: 'int', name: 'Number' },\n    { value: 'bool', name: 'True/False' },\n  ]\n}\n\nreturn formSourceObj\n"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "2e48ba99-a230-4cef-8ba1-15ce54c92d8d",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "3c35227e-ffe4-41d1-91c4-fca90af20c05": {
                "externalScripts": [],
                "id": "3c35227e-ffe4-41d1-91c4-fca90af20c05",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "db4b4b3b-8170-480a-8fb0-84ac3170f34d",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"text-center filter-alert-history\"\u003e\n  \u003cspan\u003eFiltered by \u003cb id=\"alert-config-filter\"\u003e\u003c/b\u003e\u003c/span\u003e\n  \u003cbutton class=\"btn btn-primary clear-alert-config-filter\"\u003eClear\u003c/button\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "//JavaScript\n\nif (!this.datasource || this.datasource === 'none') {\n    $(\".filter-alert-history\").hide()\n} else {\n    $(\".filter-alert-history\").show()\n    const alertConfig = datasources.getAlertConfigurations.latestData().results.DATA.find(a =\u003e a.item_id === this.datasource)\n\n    $(\"#alert-config-filter\").html(alertConfig ? alertConfig.name + `\u003cdiv class=\"text-muted\"\u003e${AlertConfigSummary(alertConfig)}\u003c/div\u003e` : '')\n\n    if (!window.firstSetupFilterAlertHistory) {\n        window.firstSetupFilterAlertHistory = true\n        $(\"body\").on('click', '.clear-alert-config-filter', () =\u003e { datasources.currentAlertConfigId.sendData('none') })\n        $(\"body\").on('click', '.ReactTable a', e =\u003e e.preventDefault())\n        // fix for \"View\" link redirecting to home page\n    }\n}\n\nconst wordsFromOp = {\n  GT: 'is above',\n  LT: 'is below',\n  EQ: 'is exactly',\n};\n\nfunction AlertConfigSummary(alertConfig) {\n    const rules = tryParse(alertConfig.rules)\n    let text = rules \u0026\u0026 rules.map((rule) =\u003e RuleSummary(rule)).join(' and ')\n    if(alertConfig.timeout) {\n        text = text + ` for ${alertConfig.timeout} minutes`\n    }\n    return text\n}\n\nfunction RuleSummary(rule) {\n    if(!datasources.getSensors.latestData() || !datasources.getSensorTypes.latestData()) return ''\n    if(!rule) return ''\n    const sensor = datasources.getSensors.latestData().results.find((s) =\u003e s.name === rule.sensor_id) || {}\n    const sensorType = datasources.getSensorTypes.latestData().results.DATA.find((s) =\u003e s.item_id === sensor.sensor_type_id) || {}\n    const propertyStr = rule.property === 'battery_level' ? 'Battery' : sensorType.name\n    const wordsFromOp = {\n        'GT': 'is above',\n        'LT': 'is below',\n        'EQ': 'is equal',\n    }\n    const operatorStr = (sensorType.data_type === 'int' || rule.property === 'battery_level') ? wordsFromOp[rule.operator] : ''\n    const valueStr = (sensorType.data_type === 'int' || rule.property === 'battery_level') ? rule.value : (rule.value ? 'is open' : 'is closed')\n    const attributeStr = rule.property === 'battery_level' ? '%' : sensorType.attributes\n    return `\"${sensor.sensor_label || sensor.name}\" ${propertyStr \u0026\u0026 propertyStr.toLowerCase()} ${operatorStr} ${valueStr}${attributeStr}`\n}\n\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str)\n    } catch(e) {\n        console.warn(e, str)\n    }\n}"
                            }
                        }
                    }
                },
                "tab": "24b04a3f-425f-45b8-ab26-ec448c304989",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "3cb0fe04-1d37-4ead-b02f-70fb721031f8": {
                "externalScripts": [],
                "id": "3cb0fe04-1d37-4ead-b02f-70fb721031f8",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "40854ca9-c5d0-4594-8fa5-55e972d668d1",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eSensor Type\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n      \u003cth width=\"80\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"sensor-type-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "if (!this.datasource.getSensorTypes) return\n\nconst listItems = this.datasource.getSensorTypes.results.DATA\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n    console.log(data)\n    const selected = this.datasource.currentSensorTypeId === data.item_id;\n    return `\n    \u003ctr class=\"sensor-type-item selectable-list-item ${selected ? 'selected' : ''}\" data-item-id=\"${data.item_id}\"\u003e\n      \u003ctd\u003e\n      ${data.name}\n      \u003c/td\u003e\n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-sensor-type\" data-item-id=\"${data.item_id}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n$(\"#sensor-type-list\").html(listItems)\n\nif (!window.hasSetupSensorTypeListListeners) {\n  window.hasSetupSensorTypeListListeners = true\n  $(\"#sensor-type-list\").html(listItems)\n  $(\"body\").on('click', '.delete-sensor-type', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this sensor-type?')) {\n      datasources.deleteSensorType.sendData({ sensor_type_id: currentTarget.dataset.itemId }).then((res) =\u003e {\n        datasources.getSensorTypes.sendData()\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.sensor-type-item', ({ currentTarget }) =\u003e {\n    datasources.currentSensorTypeId.sendData(currentTarget.dataset.itemId)\n  })\n}"
                            }
                        }
                    }
                },
                "tab": "1570b53a-18f8-4383-bafd-d1ab7224d977",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "4e5107fd-44a2-4efa-87b3-e5358e075dbb": {
                "externalScripts": [],
                "id": "4e5107fd-44a2-4efa-87b3-e5358e075dbb",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "87ed1327-a384-4a17-b003-387bf8d791cb",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eSensors\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n      \u003cth scope=\"col\"\u003eEdge\u003c/th\u003e\n      \u003cth width=\"80\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"sensor-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "\n// edit is name\n// delete is item_id  :(\nif (!this.datasource.getSensors || !this.datasource.getSensors.results) return\nconst listItems = this.datasource.getSensors.results\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n    const selected = this.datasource.currentSensorId === data.name;\n    let sensor_type\n    if(datasources.getSensorTypes.latestData()) {\n      sensor_type = datasources.getSensorTypes.latestData().results.DATA.find(d =\u003e d.item_id === data.sensor_type_id)\n    }\n    // let asset\n    // if(datasources.getAssets.latestData()) {\n    //   asset = datasources.getAssets.latestData().results.DATA.find(d =\u003e d.item_id === data.asset_id)\n    // }\n    const edgeName = data.edge_id\n    return `\n    \u003ctr class=\"sensor-item selectable-list-item ${selected ? \"selected\" : ''}\" data-item-id=\"${data.name}\"\u003e\n    ${JSON.stringify(data)}\n\u003c/td\u003e\n      \u003ctd\u003e\n           ${data.sensor_label}\n      \u003cdiv class=\"text-muted\"\u003e${data.name} - ${sensor_type ? sensor_type.name : ''}\u003c/div\u003e\n      \u003c/td\u003e\n      \u003ctd\u003e\n      ${edgeName ? `\u003cbutton data-item-id=\"${edgeName}\" class=\"btn btn-link px-0 edge-link\"\u003e${edgeName}\u003cbutton\u003e` : ''}\n      \u003c/td\u003e\n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-sensor\" data-item-id=\"${data.name}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n\n$(\"#sensor-list\").html(listItems)\n\n\n\nif (!window.hasSetupSensorListListeners) {\n  window.hasSetupSensorListListeners = true\n  $(\"#sensors-list\").html(listItems)\n  $(\"body\").on('click', '.delete-sensor', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this sensor?')) {\n      datasources.deleteSensor.sendData({ sensor_id: currentTarget.dataset.itemId }).then(() =\u003e {\n        datasources.getSensors.sendData()\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.sensor-item', ({ currentTarget }) =\u003e {\n    datasources.currentSensorId.sendData(currentTarget.dataset.itemId)\n  })\n\n  $(\"body\").on('click', '.edge-link', ({ currentTarget }) =\u003e {\n    CB_PORTAL.selectPage(`/edges`)\n    datasources.currentEdgeId.sendData(currentTarget.dataset.itemId)\n  })\n}"
                            }
                        }
                    }
                },
                "tab": "e24dd291-1b7d-42d2-8e3b-ae44d2d797b1",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "536d3d01-28f7-4bbf-98e9-13324ecb2762": {
                "externalScripts": [],
                "id": "536d3d01-28f7-4bbf-98e9-13324ecb2762",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".selected-list-item {\n    background: #eee;\n}",
                            "HTML": "\u003cdiv id=\"menu-list-container\"\u003e\n\t\u003cdiv class=\"list-group\"\u003e\n\t\u003c/div\u003e\n\n    \u003ch5 class=\"mt-4 pl-4\"\u003eAdmin\u003c/h5\u003e\n    \u003cdiv class=\"admin-menu list-group\"\u003e\n\t\u003c/div\u003e\n\n\u003c/div\u003e",
                            "JavaScript": "//JavaScript\nconst container = $('#menu-list-container');\nconst pages = [\n    { \"label\": \"Home\", \"value\": \"Home\" },\n    { \"label\": \"Alert Configurations\", \"value\": \"AlertConfig\" },\n    { \"label\": \"Sensor Analytics\", \"value\": \"SensorChart\" }\n];\nconst adminPage = [\n    { \"label\": \"Sensors\", \"value\": \"Sensors\" },\n    { \"label\": \"Sensor Types\", \"value\": \"SensorTypes\" },    \n    { \"label\": \"Edges\", \"value\": \"Edges\" },\n    { \"label\": \"Locations\", \"value\": \"Locations\" },\n    { \"label\": \"Employees\", \"value\": \"Employees\" }\n];\n\nconst listGroup = $('#menu-list-container .list-group');\n\nconst adminListGroup = $('#menu-list-container .admin-menu');\n\nlistGroup.empty();\npages.forEach((a) =\u003e {\n    listGroup.append(renderItem(a));\n})\n\nadminListGroup.empty();\nadminPage.forEach((a) =\u003e {\n    adminListGroup.append(renderItem(a));\n})\n\nfunction renderItem(a) {\n    const item = $('\u003cbutton\u003e\u003c/button\u003e')\n    item.addClass('list-group-item list-group-item-action')\n    if (location.hash === `#/${a.value}`) {\n        item.addClass('selected-list-item')\n    }\n    const itemDesc = $('\u003cspan\u003e\u003c/span\u003e');\n    itemDesc.html(a.label)\n    item.on('click', () =\u003e {\n        console.log('asdf', a);\n        CB_PORTAL.selectPage(`/${a.value}`)\n        CB_PORTAL.toggleFlyout();\n    })\n    item.append(itemDesc)\n    return item\n}\n"
                        }
                    }
                },
                "tab": null,
                "type": "HTML_WIDGET_COMPONENT"
            },
            "5c502a4b-0bdf-48d0-8f0e-a6a6092c97d7": {
                "externalScripts": [],
                "id": "5c502a4b-0bdf-48d0-8f0e-a6a6092c97d7",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#f5f5f5",
                    "displayColumn": "name",
                    "editColumns": {
                        "endDate": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "a5bcce53-8a32-4782-a687-726181f0d5ea",
                            "label": "End Date",
                            "name": "endDate",
                            "options": {},
                            "orderIdx": 2,
                            "required": true
                        },
                        "startDate": {
                            "dataType": "timestamp",
                            "display": true,
                            "inputType": "DATE_PICKER",
                            "key": "e6a8ace2-fb35-46c0-b673-2773fc5da8b9",
                            "label": "Start Date",
                            "name": "startDate",
                            "options": {},
                            "orderIdx": 1,
                            "required": true
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "const getLocationAndSensorFromDropdowns = (elem) =\u003e {\n    return {\n        location: elem.find(`.${locationDropdownClass}`).val(),\n        sensor: elem.find(`.${sensorDropdownClass}`).val(),\n    }\n}\nconst errorDiv = $('#interactive-chart-error');\nconst showIncompleteAlert = () =\u003e {\n    errorDiv.empty();\n    errorDiv.append('Please supply values for all parameters');\n}\n\nconst locationDropdownClass = 'location-select';\nconst sensorDropdownClass = 'sensor-select';\nconst paramElems = $('#chart-parameter-container').find('.parameter-select-container').toArray();\nconst params = paramElems.map((p) =\u003e getLocationAndSensorFromDropdowns($(p)));\nif (params.length === 0) {\n    showIncompleteAlert();\n    return;\n}\nfor (let i = 0, len = params.length; i \u003c len; i += 1) {\n    if (!params[i].location || !params[i].sensor) {\n        showIncompleteAlert();\n        return;\n    }\n}\n\nif (this.widget) {\n    errorDiv.empty();\n    const dates = this.widget.data;\n    datasources.getHistoryForSensorsB.sendData({\n        sensor_ids: params.map((p) =\u003e p.sensor),\n        startTime: dates.startDate,\n        endTime: dates.endDate\n    })\n}"
                    },
                    "fontColor": "#000000",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "d77d3c6f-b2b5-4478-97e4-31cde6899342",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "6e15bceb-4fec-4e88-87fa-76d5cfdcdfb6": {
                "externalScripts": [],
                "id": "6e15bceb-4fec-4e88-87fa-76d5cfdcdfb6",
                "props": {
                    "HAS_UNIQUE_STYLE": true,
                    "brushHeight": 40,
                    "brushStroke": "#6e8592",
                    "chartData": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "b4cbc42e-5834-4c46-92e1-92bcd5a8d3e3",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "const legendTypes = [\n    'line',\n    'square',\n    'circle',\n    'cross',\n    'diamond',\n    'star',\n    'triangle',\n    'wye',\n    'rect',\n]\n\nconst getLabelForSensor = (sensorID) =\u003e {\n    try {\n        if (datasources.getSensors.lastUpdated) {\n            const sensors = datasources.getSensors.latestData().results;\n            for (let i = 0, len = sensors.length; i \u003c len; i++) {\n                if (sensors[i].name === sensorID) {\n                    return sensors[i].sensor_label;\n                }\n            }\n        }\n    } catch (e) {\n\n    }\n    return sensorID;\n}\nconsole.log('datas', this.datasource);\ntry {\n    const results = this.datasource.results;\n    const sample = results[results.length - 1];\n    const nonSensorKeys = ['timestamp'];\n    const sensors = Object.keys(sample).filter((k) =\u003e {\n        return nonSensorKeys.indexOf(k) === -1;\n    })\n    const defaultYAxis = { \"orientation\": \"left\", \"paddingTop\": 0, \"paddingBottom\": 0, \"showStandardDeviations\": false, \"numberStandardDeviations\": 2, \"standardDeviationLabel\": \"σ\", \"lowerBound\": 0, \"autoBounds\": false, \"dataKey\": \"\", \"upperBound\": 80 }\n    const defaultLine = { \"type\": \"monotone\", \"legendType\": \"star\", \"dataKey\": \"385259\" }\n    console.log('sense', sensors);\n    const currentSettings = this.model.settings();\n    console.log('hey', currentSettings)\n    const newSettings = {\n        ...currentSettings,\n        // yAxes: sensors.map((s) =\u003e ({\n        //     ...defaultYAxis,\n        //     dataKey: s,\n        // })),\n        yAxes: [defaultYAxis],\n        lines: sensors.map((s, idx) =\u003e {\n            let name = getLabelForSensor(s);\n            if (name !== s) {\n                name = `${name} (${s})`\n            }\n            return {\n                ...defaultLine,\n                legendType: legendTypes[idx] ? legendTypes[idx] : legendTypes[0],\n                dataKey: s,\n                name,\n            }\n        })\n    }\n    console.log('new sett', newSettings);\n    this.model.settings(newSettings);\n    return results;\n} catch (e) {\n    console.error('Error in line chart', e);\n}\nreturn []"
                        }
                    },
                    "chartMarginBottom": 0,
                    "chartMarginLeft": 0,
                    "chartMarginRight": 0,
                    "chartMarginTop": 0,
                    "detectionStrictness": 2,
                    "enableStatisticsView": false,
                    "legendColor": "#000000",
                    "legendHorizontalAlign": "center",
                    "legendLayout": "horizontal",
                    "legendVerticalAlign": "bottom",
                    "lineColors": [
                        {
                            "stroke": "#428bca"
                        },
                        {
                            "stroke": "#ec2d41"
                        },
                        {
                            "stroke": "#2ebf08"
                        },
                        {
                            "stroke": "#7519d2"
                        }
                    ],
                    "lines": [
                        {
                            "dataKey": "222222",
                            "legendType": "line",
                            "name": "Two (222222)",
                            "type": "monotone"
                        }
                    ],
                    "referenceLines": [],
                    "showBrush": true,
                    "showDots": false,
                    "showGrid": true,
                    "showHorizontalGrid": true,
                    "showLegend": true,
                    "showTooltip": true,
                    "showVerticalGrid": true,
                    "timeformat": "MM/DD hh:mm",
                    "xAxisDataKey": "timestamp",
                    "xAxisLabel": "Time",
                    "xAxisOrientation": "bottom",
                    "xAxisPaddingLeft": 0,
                    "xAxisPaddingRight": 0,
                    "xType": "category",
                    "yAxes": [
                        {
                            "autoBounds": false,
                            "dataKey": "",
                            "lowerBound": 0,
                            "numberStandardDeviations": 2,
                            "orientation": "left",
                            "paddingBottom": 0,
                            "paddingTop": 0,
                            "showStandardDeviations": false,
                            "standardDeviationLabel": "σ",
                            "upperBound": 80
                        }
                    ]
                },
                "tab": "3667bf06-7abe-4486-8dcd-03b23e4fff12",
                "type": "LINE_CHART_WIDGET_COMPONENT"
            },
            "71331538-843f-43fa-a61a-a26615bdb609": {
                "externalScripts": [],
                "id": "71331538-843f-43fa-a61a-a26615bdb609",
                "props": {
                    "HAS_UNIQUE_STYLE": true,
                    "brushHeight": 40,
                    "brushStroke": "#6e8592",
                    "chartData": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "fb95de32-504c-4393-bcec-5ee0cb5b580c",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "const legendTypes = [\n    'line',\n    'square',\n    'circle',\n    'cross',\n    'diamond',\n    'star',\n    'triangle',\n    'wye',\n    'rect',\n]\n\nconst getLabelForSensor = (sensorID) =\u003e {\n    try {\n        if (datasources.getSensors.lastUpdated) {\n            const sensors = datasources.getSensors.latestData().results.DATA;\n            for (let i = 0, len = sensors.length; i \u003c len; i++) {\n                if (sensors[i].sensor_id === sensorID) {\n                    return sensors[i].sensor_label;\n                }\n            }\n        }\n    } catch (e) {\n\n    }\n    return sensorID;\n}\n\ntry {\n    const results = this.datasource.results;\n    const sample = results[results.length - 1];\n    const nonSensorKeys = ['timestamp'];\n    const sensors = Object.keys(sample).filter((k) =\u003e {\n        return nonSensorKeys.indexOf(k) === -1;\n    })\n    const defaultYAxis = { \"orientation\": \"left\", \"paddingTop\": 0, \"paddingBottom\": 0, \"showStandardDeviations\": false, \"numberStandardDeviations\": 2, \"standardDeviationLabel\": \"σ\", \"lowerBound\": 0, \"autoBounds\": false, \"dataKey\": \"\", \"upperBound\": 80 }\n    const defaultLine = { \"type\": \"monotone\", \"legendType\": \"star\", \"dataKey\": \"385259\" }\n    console.log('sense', sensors);\n    const currentSettings = this.model.settings();\n    console.log('hey', currentSettings)\n    const newSettings = {\n        ...currentSettings,\n        // yAxes: sensors.map((s) =\u003e ({\n        //     ...defaultYAxis,\n        //     dataKey: s,\n        // })),\n        yAxes: [defaultYAxis],\n        lines: sensors.map((s, idx) =\u003e {\n            let name = getLabelForSensor(s);\n            if (name !== s) {\n                name = `${name} (${s})`\n            }\n            return {\n                ...defaultLine,\n                legendType: legendTypes[idx] ? legendTypes[idx] : legendTypes[0],\n                dataKey: s,\n                name,\n            }\n        })\n    }\n    console.log('new sett', newSettings);\n    this.model.settings(newSettings);\n    return results;\n} catch (e) {\n    console.error('Error in line chart', e);\n}\nreturn []"
                        }
                    },
                    "chartMarginBottom": 0,
                    "chartMarginLeft": 0,
                    "chartMarginRight": 0,
                    "chartMarginTop": 0,
                    "detectionStrictness": 2,
                    "enableStatisticsView": false,
                    "legendColor": "#000000",
                    "legendHorizontalAlign": "center",
                    "legendLayout": "horizontal",
                    "legendVerticalAlign": "bottom",
                    "lineColors": [
                        {
                            "stroke": "#6E8592"
                        },
                        {
                            "stroke": "#14bf4b"
                        },
                        {
                            "stroke": "#DBA5A8"
                        },
                        {
                            "stroke": "#E8E7C6"
                        }
                    ],
                    "lines": [
                        {
                            "dataKey": "111111",
                            "legendType": "line",
                            "name": "111111",
                            "type": "monotone"
                        },
                        {
                            "dataKey": "222222",
                            "legendType": "square",
                            "name": "222222",
                            "type": "monotone"
                        }
                    ],
                    "referenceLines": [],
                    "showBrush": false,
                    "showDots": false,
                    "showGrid": true,
                    "showHorizontalGrid": true,
                    "showLegend": true,
                    "showTooltip": true,
                    "showVerticalGrid": true,
                    "timeformat": "MMM D, h:mm a",
                    "xAxisDataKey": "timestamp",
                    "xAxisOrientation": "bottom",
                    "xAxisPaddingLeft": 0,
                    "xAxisPaddingRight": 0,
                    "xType": "category",
                    "yAxes": [
                        {
                            "autoBounds": false,
                            "dataKey": "",
                            "lowerBound": 0,
                            "numberStandardDeviations": 2,
                            "orientation": "left",
                            "paddingBottom": 0,
                            "paddingTop": 0,
                            "showStandardDeviations": false,
                            "standardDeviationLabel": "σ",
                            "upperBound": 80
                        }
                    ]
                },
                "tab": "d77d3c6f-b2b5-4478-97e4-31cde6899342",
                "type": "LINE_CHART_WIDGET_COMPONENT"
            },
            "7e2d9494-5297-4d92-a024-0b19e9aff4a3": {
                "externalScripts": [],
                "id": "7e2d9494-5297-4d92-a024-0b19e9aff4a3",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "value": {
                            "CSS": "#chart-parameter-container .card-body {\n    padding: .5rem;\n}\n\n#chart-parameter-container .badge select {\n    max-width: 10rem;\n}\n\n#chart-parameter-container .badge {\n    margin-top: .5rem;\n}\n\n#chart-parameter-container .card:not(:first-of-type) {\n    margin-left: .5rem;\n}\n\n#chart-parameter-buttons {\n    margin-top: .5rem;\n}\n\n#chart-parameter-container .remove-param {\n    margin-left: .25rem;\n}\n\n#interactive-chart-error {\n    color: red;\n    font-size: .8rem;\n}",
                            "HTML": "\u003cdiv id=\"chart-parameter-widget\"\u003e\n\t\u003cdiv id=\"chart-parameter-container\" class=\"form-inline\"\u003e\n\n\t\u003c/div\u003e\n\t\u003cdiv id=\"chart-parameter-buttons\"\u003e\n\t\t\u003cbutton onclick=\"addNewParameter()\" class=\"btn btn-light\"\u003e\n    + Add Parameters\n  \u003c/button\u003e\n\t\t\u003ca target=\"_blank\" id=\"export-sensor-history\" class=\"btn btn-light\"\u003e\n\t\t\t\u003ci class=\"fas fa-download\"\u003e\u003c/i\u003e Export\n\t\t\u003c/a\u003e\n\t\t\u003cdiv id=\"interactive-chart-error\"\u003e\u003c/div\u003e\n\t\u003c/div\u003e\n\u003c/div\u003e",
                            "JavaScript": "//JavaScript\nlet assets = [];\nconst containerId = 'chart-parameter-container';\nconst widgetContainer = $(`#${containerId}`);\n// debugger;\nwidgetContainer.empty();\nif (!datasources.getHistoryForSensorsB.lastUpdated) {\n    // send a bogus query to initialize this datasource with an empty array\n    datasources.getHistoryForSensorsB.sendData({\n        \"sensor_ids\": [\n            \"351530\"\n        ],\n        \"startTime\": \"2042-09-20T18:52:58.971Z\",\n        \"endTime\": \"2042-09-21T18:52:58.971Z\"\n    })\n}\nconst handleAssets = (data) =\u003e {\n    // debugger;\n    datasources.getAssets.latestData.unsubscribe(handleAssets);\n    assets = data;\n    addDropdownsToContainer(createParameterDropdowns(0));\n}\n\nconst addDropdownsToContainer = (dropdowns) =\u003e {\n    widgetContainer.append(dropdowns);\n}\n\nconst removeParamDropdown = (index) =\u003e {\n    $(`#${paramDropdownContainerIdPrefix}${index}`).remove();\n}\n\nconst paramDropdownContainerClass = 'parameter-select-container';\nconst paramDropdownContainerIdPrefix = 'parameter-select-container-id-';\nconst locationDropdownClass = 'location-select';\nconst sensorDropdownClass = 'sensor-select';\nconst createParameterDropdowns = (index) =\u003e {\n    const badge = $('\u003cdiv\u003e\u003c/div\u003e');\n    badge.attr('id', `${paramDropdownContainerIdPrefix}${index}`);\n    badge.addClass('badge badge-light badge-pill');\n    const container = $('\u003cdiv\u003e\u003c/div\u003e');\n    badge.append(container);\n    container.addClass('form-group');\n    container.addClass(paramDropdownContainerClass);\n    const locationDropdown = createLocationDropdown(index, assets);\n    const sensorDropdown = createSensorDropdown(index);\n    container.append(locationDropdown);\n    container.append(sensorDropdown)\n    const removeParamElem = $('\u003ci\u003e\u003c/i\u003e')\n    removeParamElem.addClass('fa fa-times-circle c-pointer remove-param');\n    removeParamElem.on('click', () =\u003e {\n        removeParamDropdown(index);\n    })\n    container.append(removeParamElem);\n    return badge;\n}\n\nconst changeSensorOptions = (index, sensors) =\u003e {\n    debugger;\n    const sensorDropdown = $(`#${paramDropdownContainerIdPrefix}${index} .${sensorDropdownClass}`);\n    sensorDropdown.empty();\n    sensorDropdown.append(createBlankSensorItem());\n    sensors.forEach((s) =\u003e {\n        sensorDropdown.append(createDropdownItem(s.name, s.sensor_label));\n    });\n}\n\nconst createBlankSensorItem = () =\u003e {\n    return createDropdownItem('', '-- select sensor --');\n}\n\nconst createSensorDropdown = (index) =\u003e {\n    const sensorDropdown = $('\u003cselect\u003e\u003c/select\u003e');\n    sensorDropdown.addClass('form-control-sm')\n    sensorDropdown.addClass(sensorDropdownClass);\n    sensorDropdown.append(createBlankSensorItem());\n\n    return sensorDropdown;\n}\n\nconst createDropdownItem = (value, label) =\u003e {\n    const item = $('\u003coption\u003e\u003c/option\u003e');\n    item.attr('value', value).text(label);\n    return item;\n}\n\nconst createLocationDropdown = (index, locations) =\u003e {\n    const locationDropdown = $('\u003cselect\u003e\u003c/select\u003e');\n    locationDropdown.addClass('form-control-sm')\n    locationDropdown.addClass(locationDropdownClass);\n\n    locationDropdown.append(createDropdownItem('blank', '-- select gateway --'))\n    locations.forEach((l) =\u003e {\n        const item = createDropdownItem(l.name, l.name);\n        locationDropdown.append(item)\n    })\n\n    locationDropdown.on('change', (e) =\u003e {\n        getSensorsByEdgeId(e.target.value).then((sensors) =\u003e {\n            console.log('sensors', sensors);\n            changeSensorOptions(index, sensors);\n        });\n    })\n\n    return locationDropdown;\n}\n\nconst getSensorsByEdgeId = (id) =\u003e {\n    return datasources.getSensorsByEdgeId.sendData({ edge_id: id }).then((data) =\u003e {\n        console.log('data', data);\n        return data.results;\n    })\n}\n\nwindow.addNewParameter = () =\u003e {\n    const currentNumOfParams = widgetContainer.find(`.${paramDropdownContainerClass}`).length;\n    addDropdownsToContainer(createParameterDropdowns(currentNumOfParams))\n}\n\nconst createHeadersForCSV = (columns) =\u003e {\n    return columns.map((k) =\u003e `${k},`);\n}\n\nconst generateSensorHistoryCSV = (sensorHistory, allSensors) =\u003e {\n    try {\n        const fields = Object.keys(sensorHistory[sensorHistory.length - 1]).sort((a, b) =\u003e {\n            if (a === 'timestamp') {\n                return -1;\n            }\n            if (b === 'timestamp') {\n                return 1;\n            }\n            return 0;\n        });\n        const replacer = function (key, value) { return value === null ? '' : value }\n        const csv = sensorHistory.map(function (row) {\n            return fields.map(function (fieldName) {\n                return JSON.stringify(row[fieldName], replacer)\n            }).join(',')\n        })\n        csv.unshift(getHeadersWithSensorLabels(fields, allSensors).join(',')) // add header column\n        return csv.join('\\r\\n');\n    } catch (e) {\n        console.error('Unable to create CSV for sensor history', e);\n    }\n}\n\nconst getHeadersWithSensorLabels = (fields, allSensors) =\u003e {\n    try {\n        return fields.map((f) =\u003e {\n            if (f === 'timestamp') {\n                return f;\n            } else {\n                for (let i=0, len=allSensors.length; i \u003c len; i++) {\n                    if (allSensors[i].sensor_id === f) {\n                        return allSensors[i].sensor_label;\n                    }\n                }\n                return f;\n            }\n        })\n    } catch (e) {\n        return fields;\n    }\n    return fields;\n}\n\nconst handleSensorHistory = (resp) =\u003e {\n    const data = resp.results;\n    const exportButton = $('#export-sensor-history');\n\n    datasources.getSensors.sendData({}).then((sensorResp) =\u003e {\n        const sensors = sensorResp.results.DATA;\n        const csv = generateSensorHistoryCSV(data, sensors);\n        exportButton.attr('href', `data:text/csv;charset=utf-8,${csv}`)\n    })\n\n}\n\nif (datasources.getHistoryForSensorsB.lastUpdated) {\n    handleSensorHistory(datasources.getHistoryForSensorsB.latestData());\n}\n\nif (!window.hasSubscribedToGetHistoryForSensorsB) {\n    window.hasSubscribedToGetHistoryForSensorsB = true;\n    datasources.getHistoryForSensorsB.latestData.subscribe(handleSensorHistory);\n}\n\nif (datasources.getAssets.lastUpdated) {\n    handleAssets(datasources.getAssets.latestData());\n}\n\nif (!window.hasSubscribedToGetAssetsForChart) {\n    window.hasSubscribedToGetAssetsForChart = true;\n    datasources.getLocations.latestData.subscribe(handleAssets);\n}\n"
                        }
                    }
                },
                "tab": "d77d3c6f-b2b5-4478-97e4-31cde6899342",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "8c09e1ae-4fe4-41df-bfee-6b8f52e27973": {
                "externalScripts": [],
                "id": "8c09e1ae-4fe4-41df-bfee-6b8f52e27973",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "activeItemBackgroundColor": "#6e8592",
                    "activeItemFontColor": "#ffffff",
                    "activeStatusBulletColor": "green",
                    "allowFilters": false,
                    "allowSearch": true,
                    "bulletColor": "#000000",
                    "displayAttribute": "name",
                    "displayBullets": true,
                    "displayStatusIndicators": false,
                    "enableListAutoSelect": false,
                    "eventTarget": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "81e54cbd-7409-4350-9b44-2a1027324570",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "const getSensorTypeById = (id) =\u003e {\n    const types = datasources.getSensorTypes.latestData().results.DATA;\n    return types.filter((t) =\u003e t.item_id === id)[0];\n}\n\nconst getSensorSubscription = (topic) =\u003e {\n    return window.sensorSubscriptions.filter((sub) =\u003e sub.topic === topic)[0];\n}\n\nconst filterRulesBySensorId = (rules, id) =\u003e {\n    try {\n        for (let i = 0, len = rules.length; i \u003c len; i++) {\n            if (rules[i].sensor_id === id) {\n                return rules[i];\n            }\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nconst getRuleForSensorById = (alertConfigs, id) =\u003e {\n    try {\n        for (let i = 0, len = alertConfigs.length; i \u003c len; i++) {\n            const rules = JSON.parse(alertConfigs[i].rules);\n            const sensorRules = filterRulesBySensorId(rules, id);\n            if (sensorRules) {\n                return sensorRules;\n            }\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nconst getAlertConfigForSensorById = (id) =\u003e {\n    if (datasources.getAlertConfigurations.lastUpdated) {\n        try {\n            const configs = datasources.getAlertConfigurations.latestData().results.DATA;\n            return getRuleForSensorById(configs, id);\n        } catch (e) {\n            console.warn('Unable to get alert config for sensor with id', id, e);\n        }\n    }\n}\n\nconst updateHumidityGauges = (sensorMsg) =\u003e {\n    const val = sensorMsg.dataValue;\n    const split = val.split('|');\n    const humidity = split[0];\n    const temp = split[1];\n    updateSingleGauge(sensorMsg.sensorID, getLabelForSensor(sensorMsg), humidity, sensorMsg.messageDate, sensorMsg)\n}\n\nconst getFillColorForSensor = (rule, value) =\u003e {\n    if (rule) {\n        try {\n            const val = Number(value);\n            const ruleThreshold = Number(rule.value);\n            let crossedThreshold = false;\n            switch (rule.operator) {\n                case ruleOperators.GT:\n                    crossedThreshold = val \u003e ruleThreshold;\n                    break;\n                case ruleOperators.LT:\n                    crossedThreshold = val \u003c ruleThreshold;\n                    break;\n                case ruleOperators.EQ:\n                    crossedThreshold = val === ruleThreshold;\n                    break;\n            }\n            return crossedThreshold ? 'red' : 'green';\n        } catch (e) {\n            console.warn('Unable to get fill color for sensor', rule, value, e);\n        }\n    }\n    return 'green';\n}\n\nconst getGaugeLabel = (label, sensorMsg) =\u003e {\n    try {\n        switch (sensorMsg.plotLabels) {\n            case \"Celsius\":\n                return `${label} (*C)`;\n            case \"Humidity|Celsius\":\n                return `${label} (%)`;\n        }\n    } catch (e) {\n\n    }\n    return label;\n}\n\nconst ruleOperators = {\n    GT: 'GT',\n    LT: 'LT',\n    EQ: 'EQ'\n}\n\nconst messageTimeClass = 'message-time';\nconst updateSingleGauge = (id, label, value, time, sensorMsg) =\u003e {\n    console.log('single', sensorMsg)\n    const mySensor = $(`#assetSensor${order}`);\n    mySensor.show();\n    mySensor.find(`.${messageTimeClass}`).remove();\n\n    const msgTime = $('\u003cdiv\u003e\u003c/div\u003e');\n    msgTime.addClass(messageTimeClass)\n    msgTime.text(time);\n    msgTime.css({\n        'text-align': 'center',\n        top: '-13px',\n        position: 'relative',\n        color: 'rgb(153, 153, 153)',\n        'font-size': '.75rem'\n    })\n    mySensor.append(msgTime);\n    const sensorRule = getAlertConfigForSensorById(id);\n    const fillColor = getFillColorForSensor(sensorRule, value);\n    datasources[`assetSensor${order}`].sendData({ label: getGaugeLabel(label, sensorMsg), value, fillColor });\n}\n\nconst updateTempGauges = (sensorMsg, order) =\u003e {\n    updateSingleGauge(sensorMsg.sensorID, getLabelForSensor(sensorMsg), sensorMsg.dataValue, sensorMsg.messageDate, sensorMsg);\n}\n\nconst getSensorById = (id) =\u003e {\n    const sensors = datasources.getSensors.latestData().results;\n    for (let i = 0, len = sensors.length; i \u003c len; i++) {\n        if (sensors[i].name === id) {\n            return sensors[i];\n        }\n    }\n}\n\nconst getLabelForSensor = (sensorMsg) =\u003e {\n    try {\n        if (datasources.getSensors.lastUpdated) {\n            const sensors = datasources.getSensors.latestData().results.DATA;\n            for (let i = 0, len = sensors.length; i \u003c len; i++) {\n                if (sensors[i].sensor_id === sensorMsg.sensorID) {\n                    return sensors[i].sensor_label;\n                }\n            }\n        }\n    } catch (e) {\n\n    }\n    return sensorMsg.sensorName;\n}\n\nconst updateDoorToggle = (sensorMsg) =\u003e {\n    let val = false;\n    if (sensorMsg.dataValue === 'True') {\n        val = true;\n    }\n    $('#assetSensor1').show();\n    datasources.assetSensor1.sendData({ value: val });\n}\n\nconst messageReceived = (msg) =\u003e {\n    let parsedMsg;\n    try {\n        parsedMsg = JSON.parse(msg);\n    } catch (e) {\n        console.error('Failed to parse message', e);\n    }\n    if (parsedMsg \u0026\u0026 parsedMsg.sensor_message.sensorID) {\n        try {\n\n        const id = parsedMsg.sensor_message.sensorID;\n        const sensor = getSensorById(id);\n        const sensorType = getSensorTypeById(sensor.sensor_type_id);\n        const alertConfig = getAlertConfigForSensorById(id);\n\n        datasources.latestSensorData.sendData({\n            ...datasources.latestSensorData.latestData(),\n            [id]: {\n                id,\n                sensorType,\n                sensor,\n                message: parsedMsg,\n                alertConfig\n            }\n        })\n        } catch(e) {\n            console.error('Unable to update latestSensorData', id, sensorType, sensor, e)\n        }\n    }\n}\n\nconst setupMessaging = () =\u003e {\n    return new Promise((resolve) =\u003e {\n        if (!window.messagingObjectForSensors) {\n            window.sensorSubscriptions = [];\n            window.messagingObjectForSensors = CB_PORTAL.ClearBlade.Messaging({ useSSL: true }, resolve);\n        } else {\n            window.sensorSubscriptions.forEach((sub) =\u003e {\n                try {\n                    window.messagingObjectForSensors.unsubscribe(sub.topic, {});\n                } catch (e) {\n                    console.error('Unable to unsub from topics', e);\n                }\n            })\n\n            window.sensorSubscriptions = [];\n            resolve();\n        }\n    })\n}\n\nconst messageHistoryCallback = (err, data) =\u003e {\n    if (!err) {\n        if (data \u0026\u0026 data[0]) {\n            messageReceived(data[0].message);\n        }\n    }\n}\n\nconst resetGauges = () =\u003e {\n    datasources.latestSensorData.sendData({});\n}\n\nconst updateGauges = (sensors) =\u003e {\n    resetGauges();\n    sensors.forEach((s) =\u003e {\n        const sensorType = getSensorTypeById(s.sensor_type_id);\n        const topicName = `sensor/${s.name}`;\n\n        window.sensorSubscriptions.push({ topic: topicName });\n        window.messagingObjectForSensors.subscribe(topicName, {}, messageReceived);\n        CB_PORTAL.ClearBlade.MessagingStats().getMessageHistory(topicName, new Date().getTime(), 1, messageHistoryCallback)\n    })\n}\n\nconst assetId = this.widget.name;\ndatasources.getSensors.sendData({ edge_id: assetId }).then((data) =\u003e {\n    let sensors;\n    try {\n        sensors = data.results;\n    } catch (e) {\n        console.error('error parsing sensors after selecting asset', e);\n    }\n    if (sensors \u0026\u0026 Array.isArray(sensors)) {\n\n        // update the history line chart\n        try {\n            datasources.sensorHistoryIds.sendData(sensors.map((s) =\u003e s.name))\n            if (datasources.sensorHistoryTimeRange.lastUpdated) {\n                const timeRange = datasources.sensorHistoryTimeRange.latestData();\n                datasources.getHistoryForSensors.sendData({\n                    sensor_ids: datasources.sensorHistoryIds.latestData(),\n                    startTime: timeRange.startDate.toISOString(),\n                    endTime: timeRange.endDate.toISOString()\n                })\n            }\n        } catch (e) {\n            console.error('error parsing sensors after selecting asset', e);\n        }\n        console.log(`list of sensors for ${assetId}`, sensors);\n        setupMessaging().then(() =\u003e {\n            // update the 'latest data' gauges\n            try {\n                updateGauges(sensors);\n            } catch (e) {\n                console.error('error updating gauges', e);\n            }\n        })\n    }\n})\nreturn this.widget;"
                        }
                    },
                    "fontColor": "#000000",
                    "groupByAttributes": [
                        "location_name",
                        null
                    ],
                    "inactiveStatusBulletColor": "darkred",
                    "listItemBackgroundColor": "#ffffff",
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "51099178-350b-4148-b7f8-67da06e020bf",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "if (!datasources.sensorHistoryTimeRange.lastUpdated) {\n    const now = new Date();\n    const yesterday = new Date();\n    yesterday.setDate(now.getDate() - 1);\n    console.log('now', now);\n    datasources.sensorHistoryTimeRange.sendData({\n        startDate: yesterday,\n        endDate: now\n    })\n}\n\nconst getLocationNameById = (locs, id) =\u003e {\n    const found = locs.filter((l) =\u003e l.item_id === id)[0];\n    if (found) {\n        return found.name;\n    }\n    return 'Location not found'\n}\n\nif (this.datasource.getLocations \u0026\u0026 this.datasource.getLocations.results \u0026\u0026 this.datasource.getAssets) {\n    const assets = this.datasource.getAssets;\n    return assets.map((a) =\u003e ({\n        ...a,\n        location_name: getLocationNameById(this.datasource.getLocations.results.DATA, a.location_id)\n    }))\n    return assets;\n} else {\n    return [];\n}\n"
                        }
                    },
                    "titleColor": "#000000",
                    "trackingColumnName": "edge_key"
                },
                "tab": "3667bf06-7abe-4486-8dcd-03b23e4fff12",
                "type": "GROUPING_LIST_WIDGET_COMPONENT"
            },
            "8d4b29b6-d387-4360-82a5-77f58bd0ba43": {
                "externalScripts": [],
                "id": "8d4b29b6-d387-4360-82a5-77f58bd0ba43",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#f5f5f5",
                    "displayColumn": "",
                    "editColumns": {
                        "contacts": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "MULTI_TYPE_AHEAD_TYPE",
                            "key": "72c4832c-6548-464c-9fa4-f5fd180f52af",
                            "label": "Contacts",
                            "name": "contacts",
                            "orderIdx": 5
                        },
                        "edge_id": {
                            "dataType": "string",
                            "display": true,
                            "dropdownOptions": [
                                {
                                    "name": "first_edge",
                                    "value": "first_edge"
                                },
                                {
                                    "name": "second_edge",
                                    "value": "second_edge"
                                }
                            ],
                            "inputType": "typeAhead",
                            "key": "afd6c6e6-3917-4099-9e3d-68d7e878568d",
                            "label": "Edge",
                            "name": "edge_id",
                            "orderIdx": 2,
                            "smallText": "Filter sensors by edge"
                        },
                        "item_id": {
                            "dataType": "string",
                            "display": false,
                            "key": "bbe8099b-b02a-4932-ac6d-d7ef2549b858",
                            "name": "item_id",
                            "orderIdx": 8
                        },
                        "message": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "textArea",
                            "key": "0d4a7736-92d0-4950-a0cc-30e2cf27bce5",
                            "label": "Message",
                            "name": "message",
                            "orderIdx": 6,
                            "required": true
                        },
                        "name": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "key": "3f4eeddd-3917-4099-9e3d-68d7e878568d",
                            "label": "Name",
                            "name": "name",
                            "orderIdx": 0,
                            "required": true,
                            "widthPercent": 50
                        },
                        "priority": {
                            "dataType": "string",
                            "defaultValue": "Low",
                            "display": true,
                            "dropdownOptions": [
                                "Low",
                                "Medium",
                                "High"
                            ],
                            "errorText": "Must be a valid email",
                            "inputType": "option",
                            "key": "cfd6c6e6-85c4-45e3-b62f-df232434fa2c",
                            "label": "Priority",
                            "name": "priority",
                            "orderIdx": 1,
                            "required": false,
                            "validationType": "",
                            "widthPercent": 50
                        },
                        "rules": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "HTML",
                            "key": "45fe8995-990f-4a61-9631-1029def95116",
                            "name": "rules",
                            "orderIdx": 3,
                            "parser": {
                                "CSS": ".rule:first-child .and-div {\n    display: none;\n}",
                                "HTML": "\u003cdiv\u003e\n  \u003cdiv id=\"my-HTML-rules\"\u003e\u003c/div\u003e\n\u003c/div\u003e",
                                "JavaScript": "const AndDiv = `\u003cdiv class=\"text-center text-muted mb-1 and-div\"\u003eAND\u003c/div\u003e`\n\n\nconst wordsFromOp = {\n  GT: 'is above',\n  LT: 'is below',\n  EQ: 'is exactly',\n};\n\n\nfunction PropertyDiv(rule, sensorType) {\n  return `\n      \u003cdiv class=\"input-group-prepend\"\u003e\n              \u003cselect class=\"custom-select\" id=\"property\"\u003e\n                \u003coption value=\"sensor_reading\" ${'sensor_reading' === rule.property ? 'selected' : ''}\u003e${sensorType.name}\u003c/option\u003e\n                \u003coption value=\"battery_level\" ${'battery_level' === rule.property ? 'selected' : ''}\u003eBattery\u003c/option\u003e\n              \u003c/select\u003e\n      \u003c/div\u003e\n  `\n}\n\n// -- SensorRuleDiv --\nfunction SensorRuleDiv(rule = {}) {\n  if (!rule.sensor_id) {\n    return `\u003cdiv id=\"sensor-rule\" class=\"input-group mb-2\" /\u003e`\n  }\n  const sensor = datasources.getSensors.latestData().results.find((s) =\u003e s.name === rule.sensor_id) || {}\n  const sensorType = datasources.getSensorTypes.latestData().results.DATA.find((s) =\u003e s.item_id === sensor.sensor_type_id) || {}\n  if (rule.property === 'battery_level') {\n    return `\n    \u003cdiv id=\"sensor-rule\" class=\"input-group mb-2\"\u003e\n      \u003cdiv class=\"input-group-prepend\"\u003e\n        ${PropertyDiv(rule, sensorType)}\n      \u003c/div\u003e\n\n      \u003cselect class=\"custom-select d-none\" id=\"operator\"\u003e\n          \u003coption value=\"LT\" selected\u003eis below\u003c/option\u003e\n      \u003c/select\u003e\n\n      \u003cdiv class=\"input-group-append\"\u003e\n        \u003cdiv class=\"input-group-text\"\u003eis below\u003c/div\u003e\n      \u003c/div\u003e\n\n      \u003cinput type=\"number\" class=\"form-control\" id=\"value\" value=\"${rule.value}\"\u003e\n\n      \u003cdiv class=\"input-group-append\"\u003e\n        \u003cdiv class=\"input-group-text\"\u003epercent\u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e`\n  }\n  if (sensorType.data_type === 'int') {\n    return `\n      \u003cdiv id=\"sensor-rule\" class=\"input-group mb-2\"\u003e\n        \u003cdiv class=\"input-group-prepend\"\u003e\n          ${PropertyDiv(rule, sensorType)}\n        \u003c/div\u003e\n\n        \u003cselect class=\"custom-select\" id=\"operator\"\u003e\n          ${Object.keys(wordsFromOp).map(op =\u003e (\n        `\u003coption value=\"${op}\" ${op === rule.operator ? 'selected' : ''}\u003e${wordsFromOp[op]}\u003c/option\u003e`\n      ))}\n        \u003c/select\u003e\n\n        \u003cinput type=\"number\" class=\"form-control\" id=\"value\" value=\"${rule.value}\"\u003e\n\n        \u003cdiv class=\"input-group-append\"\u003e\n          \u003cdiv class=\"input-group-text\"\u003e${sensorType.attributes}\u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e`\n  } else {\n    return `\n      \u003cdiv id=\"sensor-rule\" class=\"input-group mb-2\"\u003e\n        \u003cdiv class=\"input-group-prepend\"\u003e\n          ${PropertyDiv(rule, sensorType)}\n        \u003c/div\u003e\n\n        \u003cselect class=\"custom-select\" id=\"value\"\u003e\n          \u003coption value=\"true\" ${rule.value === true ? 'selected' : ''}\u003eis open\u003c/option\u003e\n          \u003coption value=\"false\" ${rule.value === false ? 'selected' : ''}\u003eis closed\u003c/option\u003e\n        \u003c/select\u003e\n\n        \u003cinput class=\"d-none\" id=\"operator\" value=\"EQ\"\u003e\n      \u003c/div\u003e`\n  }\n}\n\n// --- RULE DIV ---\nfunction RuleDiv(rule = {}) {\n  if (!datasources.getSensors.latestData()) return ''\n  const sensor = datasources.getSensors.latestData().results.find((s) =\u003e s.name === rule.sensor_id) || {}\n  let sensorOptions = datasources.getSensors.latestData().results\n  \n  if (window.edge_id) {\n    sensorOptions = sensorOptions.filter((s) =\u003e s.edge_id === edge_id)\n  }\n  return `\n\u003cdiv class=\"rule\"\u003e\n  ${AndDiv}\n  \u003cdiv class=\"input-group\"\u003e\n    \u003cselect class=\"custom-select\" id=\"sensor\"\u003e\n      \u003coption selected\u003echoose sensor...\u003c/option\u003e\n      ${sensorOptions.map((s) =\u003e (\n      `\u003coption value=\"${s.name}\" ${s.name === rule.sensor_id ? 'selected' : ''}\u003e${s.sensor_label || s.name}\u003c/option\u003e`\n    ))}\n    \u003c/select\u003e\n    \u003cdiv class=\"input-group-append\"\u003e\n      \u003cdiv class=\"delete-alert-rule input-group-text\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\n  ${SensorRuleDiv(rule)}\n\u003c/div\u003e\n`\n}\n\nconst rules = this.value || []\n\n\nfunction RulesArrDiv() {\n  return `\n  \u003cdiv class=\"rules\"\u003e\n    ${rules.length === 0 ? RuleDiv() : rules.map(rule =\u003e RuleDiv(rule)).join('')}\n  \u003c/div\u003e\n\n  \u003cbutton type=\"button\" id=\"add-rule-btn\" class=\"btn btn-secondary my-3\"\u003e+ Add rule\u003c/button\u003e\n `}\n\n\nif (!window.hasSetupAlertRules) {\n  window.hasSetupAlertRules = true;\n  $('body').on('click', '#add-rule-btn', (e) =\u003e {\n    $(\".rules\").append(`\n    ${RuleDiv()}`)\n  })\n\n  $('body').on('click', '.delete-alert-rule', (e) =\u003e {\n    e.currentTarget.parentElement.parentElement.parentElement.remove()\n  })\n\n  $('body').on('change', '#sensor', (e) =\u003e {\n    const sensor_id = $(e.target).val();\n    $(e.target.parentElement.parentElement).find('#sensor-rule').replaceWith(SensorRuleDiv({ sensor_id }))\n  })\n\n  $('body').on('change', '#property', (e) =\u003e {\n    const property = $(e.target).val();\n    const ruleDiv = $(e.target.parentElement.parentElement.parentElement.parentElement)\n    const sensor_id = ruleDiv.find('#sensor').val()\n    ruleDiv.find('#sensor-rule').replaceWith(SensorRuleDiv({ sensor_id, property }))\n  })\n}\n\nif (window.alertConfigId !== this.values.item_id) {\n  window.alertConfigId = this.values.item_id  \n  $(\"#my-HTML-rules\").html(RulesArrDiv)\n}\n\nif (window.edge_id !== this.values.edge_id) {\n  window.edge_id = this.values.edge_id  \n  $(\"#my-HTML-rules\").html(RulesArrDiv)\n}\n\n\n"
                            }
                        },
                        "title": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "HTML",
                            "key": "ad5c15cd-212e-47ec-ad17-98d12511c325",
                            "name": "title",
                            "orderIdx": -1,
                            "parser": {
                                "CSS": "",
                                "HTML": "\u003ch3 id=\"my-rules-title\"\u003e\u003c/h3\u003e\n",
                                "JavaScript": "const button = `\u003cdiv id=\"switch-to-add-sensor\" class=\"btn btn-link\"\u003eAdd Alert Config\u003c/div\u003e`\n\n$(\"#my-rules-title\").html(this.values.item_id ? `Update Alert Config ${button}` : `Add Alert Config`)\n\n\nif(!window.hasAddedRulesTitleListeners) {\n    window.hasAddedRulesTitleListeners = true\n    $('body').on('click', '#switch-to-add-sensor', (e) =\u003e {\n        e.preventDefault()\n        datasources.currentAlertConfigId.sendData('none')\n    })\n}"
                            }
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "const rulesList = []\n$(\".rule\").each((i, cond) =\u003e {\n    const $cond = $(cond)\n    const sensor_id = $cond.find(\"#sensor\").val()\n    const operator = $cond.find(\"#operator\").val();\n    const value = $cond.find(\"#value\").val();\n    const property = $cond.find(\"#property\").val();\n    const condObject = {\n        sensor_id,\n        operator,\n        value,\n        property,\n    }\n    // required fields, sensor_id has '--select--' \n    if(operator \u0026\u0026 value) { \n        rulesList.push(condObject)        \n    }\n})\n\nif (rulesList.length === 0) {\n    return Promise.reject({ results: 'Must have at least one rule' })\n}\n\nconst { item_id, edge_id, ...alertConfiguration } = this.widget.data\nalertConfiguration.rules = JSON.stringify(rulesList)\nalertConfiguration.contacts = JSON.stringify(alertConfiguration.contacts)\n\nif (item_id) {\n    return datasources.updateAlertConfiguration.sendData({ alertConfiguration, item_id }).then(function (res) {\n        datasources.getAlertConfigurations.sendData()\n        return res\n    })\n} else {\n    return datasources.createAlertConfiguration.sendData({ alertConfiguration }).then(function (res) {\n        datasources.getAlertConfigurations.sendData()\n        datasources.currentAlertConfigId.sendData(res.results[0].item_id)\n        return res\n    })\n}\n\n\nreturn {}"
                    },
                    "fontColor": "#000000",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "993b08f0-e3b0-49d0-af07-19ed7736d195",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "\n/**\n * @type {FormSourceObj}\n */\nvar formSourceObj = {\n  data: {},\n  overrideFieldSettings: {},\n};\n\nconst alertConfig = this.datasource.getAlertConfigurations \u0026\u0026 this.datasource.getAlertConfigurations.results.DATA.find(s =\u003e s.item_id == this.datasource.currentAlertConfigId)\nif (alertConfig) {\n  formSourceObj.data = { ...alertConfig, rules: tryParse(alertConfig.rules), contacts: tryParse(alertConfig.contacts)}\n} else {\n  formSourceObj.data = { item_id: '' }\n  // tracking item_id to know when to re-render rules field\n  // need this '' so the undefined value on window will not match and get rendered once\n}\n\n\nconst employees = datasources.getEmployees.latestData() \u0026\u0026 datasources.getEmployees.latestData().results.map(\n  d =\u003e ({ value: d.email, name: d.first_name + ' ' + d.last_name })\n)\nformSourceObj.overrideFieldSettings.contacts = { dropdownOptions: employees }\n\nconst edgeNames = datasources.Edges.latestData() \u0026\u0026 datasources.Edges.latestData().map(\n  d =\u003e ({ value: d.name, name: d.name })\n)\nformSourceObj.overrideFieldSettings.edge_id = { dropdownOptions: edgeNames }\n\n\nreturn formSourceObj\n\n\nfunction tryParse(str) {\n  if (typeof str !== 'string') {\n    return str\n  }\n  try {\n    return JSON.parse(str)\n  } catch (e) {\n    console.log(str)\n    console.warn(e)\n  }\n}\n"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "3c6f225a-fd46-4405-9c2c-7b4251e27c6d",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "8fa00b9f-d03a-48eb-8efb-a3ca43694730": {
                "externalScripts": [],
                "id": "8fa00b9f-d03a-48eb-8efb-a3ca43694730",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "993b08f0-e3b0-49d0-af07-19ed7736d195",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "",
                                "HTML": "\u003cdiv class=\"\"\u003e\n  \u003ch2\u003eAlert Config\u003c/h2\u003e\n  \u003ctable class=\"table table-striped\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth scope=\"col\"\u003eName\u003c/th\u003e\n      \u003cth width=\"80\"\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody id=\"alert-config-list\"\u003e\n\t\u003c!-- this is replaced with dynamic --\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "if (!this.datasource.getAlertConfigurations) return\n\nconst wordsFromOp = {\n  GT: 'is above',\n  LT: 'is below',\n  EQ: 'is exactly',\n};\n\nfunction AlertConfigSummary(alertConfig) {\n    const rules = tryParse(alertConfig.rules)\n    let text = rules \u0026\u0026 rules.map((rule) =\u003e RuleSummary(rule)).join(' and ')\n    if(alertConfig.timeout) {\n        text = text + ` for ${alertConfig.timeout} minutes`\n    }\n    return text\n}\n\nfunction RuleSummary(rule) {\n    if(!datasources.getSensors.latestData() || !datasources.getSensorTypes.latestData()) return ''\n    if(!rule) return ''\n    const sensor = datasources.getSensors.latestData().results.find((s) =\u003e s.name === rule.sensor_id) || {}\n    const sensorType = datasources.getSensorTypes.latestData().results.DATA.find((s) =\u003e s.item_id === sensor.sensor_type_id) || {}\n    const propertyStr = rule.property === 'battery_level' ? 'Battery' : sensorType.name\n    const wordsFromOp = {\n        'GT': 'is above',\n        'LT': 'is below',\n        'EQ': 'is equal',\n    }\n    const operatorStr = (sensorType.data_type === 'int' || rule.property === 'battery_level') ? wordsFromOp[rule.operator] : ''\n    const valueStr = (sensorType.data_type === 'int' || rule.property === 'battery_level') ? rule.value : (rule.value ? 'is open' : 'is closed')\n    const attributeStr = rule.property === 'battery_level' ? '%' : sensorType.attributes\n    return `\"${sensor.sensor_label || sensor.name}\" ${propertyStr \u0026\u0026 propertyStr.toLowerCase()} ${operatorStr} ${valueStr}${attributeStr}`\n}\n\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str)\n    } catch(e) {\n        console.warn(e, str)\n    }\n}\n\nconst listItems = this.datasource.getAlertConfigurations.results.DATA\n  .sort((d1, d2) =\u003e d1.name \u003e d2.name)\n  .map((data) =\u003e {\n    const selected = this.datasource.currentAlertConfigId === data.item_id;\n    return `\n    \u003ctr class=\"alert-config-item selectable-list-item ${selected ? 'selected' : ''}\" data-item-id=\"${data.item_id}\"\u003e\n      \u003ctd\u003e\n      ${data.name}\n      \u003csmall class=\"text-muted d-block\"\u003e${AlertConfigSummary(data)}\u003c/small\u003e\n      \u003c/td\u003e\n      \u003ctd\u003e\n        \u003cdiv class=\"form-check\"\u003e\n          \u003cbutton class=\"btn btn-link py-0 px-2 delete-alert-config\" data-item-id=\"${data.item_id}\"\u003e\u003ci class=\"fa fa-trash\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e`\n  }).join('')\n\n$(\"#alert-config-list\").html(listItems)\n\nif (!window.hasSetupAlertConfigListListeners) {\n  window.hasSetupAlertConfigListListeners = true\n  $(\"#alert-config-list\").html(listItems)\n  $(\"body\").on('click', '.delete-alert-config', ({ currentTarget }) =\u003e {\n    if (window.confirm('Are you sure you want to delete this Alert Configuration?')) {\n      datasources.deleteAlertConfiguration.sendData({ item_id: currentTarget.dataset.itemId }).then(() =\u003e {\n        datasources.getAlertConfigurations.sendData()\n      })\n    }\n  })\n\n  $(\"body\").on('click', '.alert-config-item', ({ currentTarget }) =\u003e {\n    datasources.currentAlertConfigId.sendData(currentTarget.dataset.itemId)\n  })\n}\n"
                            }
                        }
                    }
                },
                "tab": "f788e2ba-4381-4cde-b3e8-746ebd168fab",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "9163fdd6-86bb-42c2-b601-33a90ca6d10c": {
                "externalScripts": [],
                "id": "9163fdd6-86bb-42c2-b601-33a90ca6d10c",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#f5f5f5",
                    "displayColumn": "name",
                    "editColumns": {
                        "description": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": false,
                            "key": "f83bc876-43b6-4ba5-918f-141d9e6f9aa1",
                            "label": "Description",
                            "name": "description",
                            "orderIdx": 3
                        },
                        "location_id": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "typeAhead",
                            "key": "4dd364d1-8b6b-4a01-b7b8-f995e47c1092",
                            "label": "Location",
                            "name": "location_id",
                            "orderIdx": 3
                        },
                        "name": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "isKeyColumn": false,
                            "isReadOnly": true,
                            "key": "a99862a5-72b2-4c06-adb3-39f957e0e35a",
                            "label": "Name",
                            "name": "name",
                            "orderIdx": 0
                        }
                    },
                    "eventTarget": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "902e4d02-dfd9-48dc-9fcb-f89944b09188",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "setTimeout(() =\u003e {\n    datasources.Edges.refresh();\n}, 1000);\nreturn this.widget;"
                        }
                    },
                    "fontColor": "#000000",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "104a5846-dd20-4402-aa39-e39d4afeae2f",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "\n/**\n * @type {FormSourceObj}\n */\nvar formSourceObj = {}\nformSourceObj.data = this.datasource.Edges \u0026\u0026 this.datasource.Edges.find(d =\u003e d.name === this.datasource.currentEdgeId)\n\nformSourceObj.overrideFieldSettings = {\n    location_id: { dropdownOptions: datasources.getLocations.latestData() \u0026\u0026 datasources.getLocations.latestData().results.DATA.map(d =\u003e (\n    { value: d.item_id, name: d.name}\n)) }\n}\nreturn formSourceObj;"
                        }
                    },
                    "noDataText": "No edge selected",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "6d3e21dd-6965-481b-82a3-9d1220685436",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "a4dda323-af9c-4256-bfbb-8d21badaff8a": {
                "externalScripts": [],
                "id": "a4dda323-af9c-4256-bfbb-8d21badaff8a",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "62b15f31-c1b7-46e6-a0a0-8406696787ad",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": "#map {\n    height: 100%;\n}\n",
                                "HTML": "\u003cdiv id=\"map\"\u003e\n  \n\u003c/div\u003e\n",
                                "JavaScript": "//JavaScript\n\nlet map;\nconst markers = [];\nconst handleLocationUpdate = (data) =\u003e {\n    const locs = data;\n    markers.forEach((m) =\u003e {\n        m.remove(map);\n    })\n    locs.forEach((l) =\u003e {\n        const lng = l.long;\n        const lat = l.lat;\n        const popupContents = $('\u003cdiv\u003e\u003c/div\u003e');\n        const popupHeader = $('\u003ch6\u003e\u003c/h6\u003e');\n        const popupInfo = $('\u003cspan\u003e\u003c/span\u003e');\n        popupHeader.text(l.name);\n        popupInfo.text(`${l.lat}, ${l.long}`)\n        popupContents.append(popupHeader);\n        popupContents.append(popupInfo);\n        const popup = new mapboxgl.Popup({})\n            .setHTML(popupContents.html());\n        const m = new mapboxgl.Marker()\n            .setLngLat([lng, lat])\n            .addTo(map)\n            .setPopup(popup);\n        markers.push(m);\n\n    })\n}\n\nconst tryAgain = (checkFn, callback, timeout, maxTries) =\u003e {\n    let numOfTries = 0;\n    const innerTry = () =\u003e {\n        console.log('trying to load map', numOfTries);\n        if (checkFn()) {\n            callback();\n        } else if(numOfTries \u003c maxTries) {\n            numOfTries++;\n            setTimeout(innerTry, timeout);\n        } else {\n            console.error('reached max number of tries');\n        }\n    }\n    innerTry();\n}\n\ntryAgain(() =\u003e typeof mapboxgl !== 'undefined', () =\u003e {\n    mapboxgl.accessToken = 'pk.eyJ1IjoiY2xhcmtieW51bSIsImEiOiJjam1jNHdoMmowN20xM3FudnlnMmkwdHNsIn0.RRhMEBuvH3bNxisPogwLHg';\n    map = new mapboxgl.Map({\n        container: 'map',\n        style: 'mapbox://styles/mapbox/streets-v9',\n        zoom: 3,\n        center: [-93.420679, 37.772537],\n    });\n\n    handleLocationUpdate(this.datasource.results.DATA);\n}, 2000, 5)\n\n$('#map').parent().height('100%')"
                            }
                        }
                    }
                },
                "tab": "b62bc750-ba2a-4572-a46b-0edc443daa27",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "ab00839e-794c-4a65-bb6b-4bbbd5bd73d6": {
                "externalScripts": [],
                "id": "ab00839e-794c-4a65-bb6b-4bbbd5bd73d6",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#f5f5f5",
                    "displayColumn": "",
                    "editColumns": {
                        "email": {
                            "dataType": "string",
                            "display": true,
                            "errorText": "Must be a valid email",
                            "inputType": "text",
                            "isReadOnly": false,
                            "key": "cfd6c6e6-85c4-45e3-b62f-df232434fa2c",
                            "label": "Email",
                            "name": "email",
                            "orderIdx": 2,
                            "required": true,
                            "validationType": "email",
                            "widthPercent": ""
                        },
                        "first_name": {
                            "dataType": "string",
                            "display": true,
                            "key": "c40c5763-6444-4208-b7f6-8a133dbd56c3",
                            "label": "First Name",
                            "name": "first_name",
                            "orderIdx": 3,
                            "widthPercent": "50"
                        },
                        "last_name": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "key": "3f4eeddd-3917-4099-9e3d-68d7e878568d",
                            "label": "Last Name",
                            "name": "last_name",
                            "orderIdx": 4,
                            "widthPercent": 50
                        },
                        "locations": {
                            "dataType": "string",
                            "defaultValue": "",
                            "display": true,
                            "inputType": "typeAhead",
                            "key": "879fd87f-4347-4dd3-a7d1-798f8481a032",
                            "label": "Locations",
                            "name": "locations",
                            "orderIdx": 10,
                            "placeholder": "Select location(s)",
                            "widthPercent": "100"
                        },
                        "password": {
                            "dataType": "string",
                            "display": true,
                            "key": "756efaf4-e582-4f04-870f-6d39a6326a89",
                            "label": "Password",
                            "name": "password",
                            "orderIdx": 7,
                            "required": true,
                            "widthPercent": "50"
                        },
                        "phone_number": {
                            "dataType": "string",
                            "display": true,
                            "errorText": "Must be in format (+1 555-555-5555)",
                            "key": "90551e0c-1bd0-417b-9c99-2ca9b2ea383e",
                            "label": "Phone",
                            "name": "phone_number",
                            "orderIdx": 5,
                            "regexValidation": "^\\(\\+\\d{1,3} \\d{3}-\\d{3}-\\d{4}\\)$",
                            "validationType": "customRegEx",
                            "widthPercent": "50"
                        },
                        "photo": {
                            "dataType": "string",
                            "display": true,
                            "key": "65264597-2a2e-468f-a83c-0b0465c571a8",
                            "label": "Photo",
                            "name": "photo",
                            "orderIdx": 6,
                            "widthPercent": "50"
                        },
                        "pin": {
                            "dataType": "string",
                            "display": true,
                            "key": "d658b09d-bb7d-40c6-b4c0-c1562bedb9a8",
                            "label": "Pin",
                            "name": "pin",
                            "orderIdx": 7,
                            "widthPercent": "50"
                        },
                        "title": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "HTML",
                            "key": "6508a2cb-4ddd-42bd-9315-0e13d2661295",
                            "name": "title",
                            "orderIdx": 8,
                            "parser": {
                                "CSS": "",
                                "HTML": "\u003cdiv\u003e\n\u003ch3 id=\"my-employee-title\"\u003e\u003c/h3\u003e\n\n\u003c/div\u003e",
                                "JavaScript": "const button = `\u003cdiv id=\"switch-to-add-employee\" class=\"btn btn-link\"\u003eAdd Employee\u003c/div\u003e`\n$(\"#my-employee-title\").html(this.values.creation_date ? `Update Employee ${button}` : `Add Employee`)\n\nif(!window.hasAddedEmployeeListeners) {\n    window.hasAddedEmployeeListeners = true\n    $('body').on('click', '#switch-to-add-employee', (e) =\u003e {\n        e.preventDefault()\n        datasources.selectedEmployee.sendData('none')\n    })\n}"
                            }
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "const { email, password, creation_date, ...newEmployee } = this.widget.data\nconst user = {\n    email,\n    ...(password ? { password } : {}), // don't include password if not there might delete\n}\nconst employee = {\n    ...newEmployee,\n    locations: JSON.stringify(newEmployee.locations)\n}\nif(creation_date) {\n    return datasources.updateEmployee.sendData({ email, employee }).then(function (res) {\n        datasources.getEmployees.sendData();\n        if(res.results \u0026\u0026 res.results.err) {\n            throw('error: ', res.results)\n        }\n        if (res.success) {\n            console.log('Successfully created: ', res.results)\n        } else {\n            throw('error: ', res.results)\n        }\n        return res\n    })\n} else {\n    return datasources.createEmployee.sendData({ user, employee}).then(function (res) {\n      datasources.getEmployees.sendData();\n        if(res.results \u0026\u0026 res.results.err) {\n            throw('error: ', res.results)\n        }\n        if (res.success) {\n            console.log('Successfully created: ', res.results)\n        } else {\n            throw('error: ', res.results)\n        }\n        return res\n    })\n}\n\n"
                    },
                    "fontColor": "#000000",
                    "htmlId": "employee-form",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "4cf06a9e-7983-41c2-95fd-89dc7830dfed",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "\n/**\n * @type {FormSourceObj}\n */\nvar formSourceObj = {\n  data: {},\n  overrideFieldSettings: {}\n};\n\nconst employee = this.datasource.getEmployees \u0026\u0026 this.datasource.getEmployees.results.find(s =\u003e s.email == this.datasource.selectedEmployee)\nlet locations = datasources.getLocations.latestData() \u0026\u0026 datasources.getLocations.latestData().results.DATA.map((loc) =\u003e ({ value: loc.item_id, name: loc.name }));\n\nif (employee) {\n  const creation_date = typeof employee.creation_date === 'number' ? (new Date(employee.creation_date * 1000)).toISOString() : employee.creation_date\n  formSourceObj.data = { ...employee, creation_date, locations: tryParse(employee.locations) }\n  formSourceObj.overrideFieldSettings = {\n    email: { isReadOnly: true },\n    creation_date: { isReadOnly: true },\n    locations: {\n      inputType: 'MULTI_TYPE_AHEAD_TYPE',\n      dropdownOptions: locations,\n    },\n    title: { orderIdx: 1 },\n    password: {display: false, required: false},\n  }\n} else {\n  formSourceObj.data = {}\n  formSourceObj.overrideFieldSettings = {\n    creation_date: { display: false },\n    locations: {\n      inputType: 'MULTI_TYPE_AHEAD_TYPE',\n      dropdownOptions: locations,\n    },\n    title: { orderIdx: 1 },\n  }\n}\n\nreturn formSourceObj;\n\nfunction tryParse(str) {\n  if (typeof str !== 'string') {\n    return str\n  }\n  try {\n    return JSON.parse(str)\n  } catch (e) {\n    console.log(str)\n    console.warn(e)\n  }\n}"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "d4be2c04-c5ff-4c4b-b2f7-d758a6a782fb",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "b480ad0c-fa1d-4f8d-8ef9-fd690b29b3c3": {
                "externalScripts": [],
                "id": "b480ad0c-fa1d-4f8d-8ef9-fd690b29b3c3",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "cardBackgroundColor": "#f5f5f5",
                    "displayColumn": "",
                    "editColumns": {
                        "address": {
                            "dataType": "string",
                            "display": true,
                            "key": "e1c740a9-bdec-4e68-9b49-12cfef6b58c4",
                            "label": "Address",
                            "name": "address",
                            "orderIdx": 5
                        },
                        "description": {
                            "dataType": "string",
                            "display": true,
                            "errorText": "Must be a valid email",
                            "inputType": "text",
                            "key": "cfd6c6e6-85c4-45e3-b62f-df232434fa2c",
                            "label": "Description",
                            "name": "description",
                            "orderIdx": 2,
                            "required": false,
                            "validationType": "",
                            "widthPercent": ""
                        },
                        "item_id": {
                            "dataType": "string",
                            "display": false,
                            "key": "fa09feec-b7b3-4940-ba05-06ce7aa694d0",
                            "name": "item_id",
                            "orderIdx": 8
                        },
                        "lat": {
                            "dataType": "string",
                            "display": true,
                            "dropdownOptions": [
                                "technician",
                                "engineer",
                                "manager"
                            ],
                            "inputType": "text",
                            "key": "afd6c6e6-3917-4099-9e3d-68d7e878568d",
                            "label": "Lat",
                            "name": "lat",
                            "orderIdx": 3,
                            "widthPercent": "50"
                        },
                        "location_type": {
                            "allowNew": true,
                            "dataType": "string",
                            "display": true,
                            "dropdownOptions": [
                                "mausoleum",
                                "office",
                                "building",
                                "tower"
                            ],
                            "inputType": "typeAhead",
                            "key": "7af25b28-f6c3-4665-a95e-9e922e1a5ddf",
                            "label": "Location Type",
                            "name": "location_type",
                            "orderIdx": 6
                        },
                        "long": {
                            "dataType": "string",
                            "display": true,
                            "key": "f01ca33c-eb81-489b-838e-cede9e1809dc",
                            "label": "Long",
                            "name": "long",
                            "orderIdx": 4,
                            "widthPercent": "50"
                        },
                        "name": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "text",
                            "key": "3f4eeddd-3917-4099-9e3d-68d7e878568d",
                            "label": "Name",
                            "name": "name",
                            "orderIdx": 1,
                            "required": true,
                            "widthPercent": ""
                        },
                        "title": {
                            "dataType": "string",
                            "display": true,
                            "inputType": "HTML",
                            "key": "06cf0654-b123-46c4-8835-b3533a7b28c5",
                            "name": "title",
                            "orderIdx": 0,
                            "parser": {
                                "CSS": "#my-HTML-title {\n    color: orange;\n}",
                                "HTML": "\u003cdiv\u003e\n  \u003ch3 id=\"my-location-title\"\u003e\u003c/h3\u003e\n\u003c/div\u003e",
                                "JavaScript": "const button = `\u003cdiv id=\"switch-to-add-location\" class=\"btn btn-link\"\u003eAdd Location\u003c/div\u003e`\n$(\"#my-location-title\").html(this.values.item_id ? `Update Location ${button}` : `Add Location`)\n\nif(!window.hasAddedLocationListeners) {\n    window.hasAddedLocationListeners = true\n    $('body').on('click', '#switch-to-add-location', (e) =\u003e {\n        e.preventDefault()\n        datasources.currentLocation.sendData('none')\n    })\n}"
                            }
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "console.log(this.widget.data);\n\nif (this.widget.data.item_id) {\n    return datasources.updateLocation.sendData({ \n        location_id: this.widget.data.item_id, \n        location: this.widget.data }\n    ).then(function (res) {\n        if (res.success) {\n            datasources.getLocations.sendData()\n        } \n        return res\n    })\n} else {\n    return datasources.createLocation.sendData({ location: this.widget.data }).then(function (res) {\n        if (res.success) {\n            datasources.getLocations.sendData()\n            datasources.currentLocationId.sendData(res.item_id)\n        }\n        return res\n    })\n}"
                    },
                    "fontColor": "#000000",
                    "isReadOnly": false,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "79e5b700-b68a-409d-8c7d-652644fbb9d8",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "\n/**\n * @type {FormSourceObj}\n */\nvar formSourceObj = {\n  data: {},\n  overrideFieldSettings: {}\n};\n\n\nconst location = this.datasource.getLocations \u0026\u0026 this.datasource.getLocations.results.DATA.find(s =\u003e s.item_id == this.datasource.currentLocation)\nif (location) {\n  formSourceObj.data = location\n} else {\n  formSourceObj.data = {}\n  formSourceObj.overrideFieldSettings = {\n    created_date: { display: false }\n  }\n}\n\nformSourceObj.overrideFieldSettings.data_type = {\n  dropdownOptions: [\n    // { value: '', name: '--select--' },\n    { value: 'int', name: 'Number' },\n    { value: 'bool', name: 'True/False' },\n  ]\n}\n\nreturn formSourceObj\n"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "b56980a9-cdba-40d4-bee5-4109cfdab317",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "brand": {
                "externalScripts": [],
                "id": "brand",
                "props": {
                    "html": {
                        "dataType": "STATIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "return this.datasource;"
                        },
                        "value": {
                            "CSS": ".nav-pills .nav-link.active, .nav-pills .show\u003e.nav-link {\n    color: #fff;\n    background-color: #0D62A5;\n}\n.btn-primary {\n    color: #fff;\n    background-color: #0D62A5;\n    border-color: #0D62A5;\n}\n#selectedAssetMetadata .list-title, #selectedAssetMetadata .item-title {\n    margin-bottom: 0 !important;\n}\n#selectedAssetMetadata form, #selectedAssetMetadata form input {\n    font-size: .75rem !important;\n}\n\ndiv#portal-pane- .card-header {\n    padding: .25rem .75rem;\n    height: 5px;\n    min-height: 30px;\n}\n\n.circle-icon {\n    background: #c9c9ca;\n    padding: .3em;\n    border-radius: 100px;\n}\n\n.circle-icon svg {\n    width: 1.5em;\n    height: 1.5em;\n    fill: white !important;\n}\n\n#location-form-widget \u003e div \u003e div, #sensor-form-widget \u003e div \u003e div, #gateway-form-widget \u003e div \u003e div {\n    padding: 0;\n}\n\n.selectable-list-item:hover  {\n    background: aliceblue !important;\n    cursor: pointer;\n}\n\n.selectable-list-item.selected {\n   background:  #cee1f1 !important\n}\n\n.form-fields {\n    margin-top: -2em !important;\n}\n\n/* stop dashboard form from getting half size */\n#selectedAssetMetadata .field {\n    width: 100%;\n    margin: 0;\n}\n\n#live-sensor-gauges .input-section {\n    height: 100px;\n}",
                            "HTML": "\u003cdiv\u003e\n  \u003cimg id=\"logoIcon\" src=\"https://www.clearblade.com/hubfs/ClearBlade_Logo_White.svg?t=1539873346733\" style=\"padding-left:8px;height:30px;margin-top: -8px;\"\u003e\n\u003c/div\u003e\n",
                            "JavaScript": "//JavaScript\n\nconst getEmployees = () =\u003e {\n    datasources.getEmployees.sendData({})\n}\n\nconst getCustomerAlertTypes = () =\u003e {\n    return datasources.getAlertTypes.sendData({});\n}\n\nconst getCustomerAlertConfigurations = () =\u003e {\n    return datasources.getAlertConfigurations.sendData({})\n}\n\nconst getCustomerAlerts = () =\u003e {\n    datasources.getAlertHistory.sendData()\n    return datasources.getAlerts.sendData({})\n}\n\nconst getAlertInfo = () =\u003e {\n    getCustomerAlertTypes()\n        .then(() =\u003e getCustomerAlertConfigurations()\n            .then(() =\u003e getCustomerAlerts()))\n}\n\nconst getSensorTypes = () =\u003e {\n    datasources.getSensorTypes.sendData()\n}\n\nconst getSensors = (id) =\u003e {\n    datasources.getSensors.sendData({});\n}\n\nconst getLocations = () =\u003e datasources.getLocations.sendData({});\n\nconst getCustomerInfo = () =\u003e {\n    try {\n        getLocations();\n        getAlertInfo();\n        getEmployees();\n        getSensorTypes();\n        getSensors();\n    } catch (e) {\n        console.error('Error setting current customer', e);\n    }\n}\n\nif (!window.hasFetchedCustomerInfo) {\n    window.hasFetchedCustomerInfo = true;\n    CB_PORTAL.ClearBlade.User().getUser((err, data) =\u003e {\n        if (!err) {\n            datasources.currentEmployee.sendData(data);\n            getCustomerInfo();\n        }\n    })\n}\n\n// needs to be outside of the widgets with their limited width and hide overflow\n$(\"body\").append(\n    ` \n\u003cdiv class=\"modal fade\" id=\"createRuleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"createRuleModalLabel\" aria-hidden=\"true\"\u003e\n\t\u003cdiv class=\"modal-dialog\" role=\"document\"\u003e\n\t\t\u003cdiv class=\"modal-content\"\u003e\n\t\t\t\u003cdiv class=\"modal-header\"\u003e\n\t\t\t\t\u003ch5 class=\"modal-title\" id=\"alert-settings-title\"\u003eModal title\u003c/h5\u003e\n\t\t\t\t\u003cbutton type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\u003e\n          \u003cspan aria-hidden=\"true\"\u003e\u0026times;\u003c/span\u003e\n        \u003c/button\u003e\n\t\t\t\u003c/div\u003e\n\t\t\t\u003cdiv class=\"modal-body\" id=\"alert-settings\"\u003e\n\t\t\t\t...\n\t\t\t\u003c/div\u003e\n\n\t\t\t\u003cdiv\u003e\n\t\t\t\t\u003cdiv class=\"modal-footer\"\u003e\n\t\t\t\t\t\u003cbutton type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\"\u003eCancel\u003c/button\u003e\n\t\t\t\t\t\u003cbutton type=\"submit\" id=\"submit-btn\" data-dismiss=\"modal\" class=\"btn btn-primary\"\u003eSubmit\u003c/button\u003e\n\t\t\t\t\u003c/div\u003e\n\t\t\t\u003c/div\u003e\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n  `\n)\n\n$(\"#logoIcon\").click(function () {\n    CB_PORTAL.selectPage(\"/Home\");\n})\n\nwindow.onhashchange = function() {\n    // for alert config, needs to know to re-render the sensor section\n    window.alertConfigId = undefined\n}"
                        }
                    }
                },
                "tab": "HEADER",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "dd96d379-2def-41f6-b780-a05cb98c8113": {
                "externalScripts": [],
                "id": "dd96d379-2def-41f6-b780-a05cb98c8113",
                "props": {
                    "addItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "86223af7-76d4-41f5-b9a5-65b5d918bd25",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "allowAdd": false,
                    "allowDelete": false,
                    "allowExport": true,
                    "allowSearch": true,
                    "allowUpdate": false,
                    "deleteItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "86223af7-76d4-41f5-b9a5-65b5d918bd25",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "enableSorting": true,
                    "fetchGridData": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "86223af7-76d4-41f5-b9a5-65b5d918bd25",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    },
                    "gridData": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "86223af7-76d4-41f5-b9a5-65b5d918bd25",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "var theData = {\n    keyColumn: \"item_id\", \n    data: [], \n    columns: datasources.Alerts.getCRUDSchema(), \n    count: 0\n};\n\nif(!this.datasource.getAlertHistory) return theData\n\nlet alerts = this.datasource.getAlertHistory.results.DATA\n\nif(this.datasource.currentAlertConfigId \u0026\u0026 this.datasource.currentAlertConfigId !== 'none') {\n    alerts = alerts.filter(alert =\u003e alert.configuration_id === this.datasource.currentAlertConfigId)\n}\ntheData.data = alerts\ntheData.count = theData.data.length\n\nreturn theData;"
                        }
                    },
                    "pageSize": 25,
                    "updateItemParser": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "86223af7-76d4-41f5-b9a5-65b5d918bd25",
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        }
                    }
                },
                "tab": "24b04a3f-425f-45b8-ab26-ec448c304989",
                "type": "CrudgridWidget"
            },
            "ea99f967-27de-47fb-a09c-1e08e4df8a70": {
                "externalScripts": [],
                "id": "ea99f967-27de-47fb-a09c-1e08e4df8a70",
                "props": {
                    "HAS_UNIQUE_STYLE": false,
                    "backgroundColor": "#f5f5f5",
                    "backgroundHoverColor": "#c2c2c2",
                    "borderColor": "#cccccc",
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "CB_PORTAL.selectPage('/AlertConfig');"
                    },
                    "fontColor": "#000000",
                    "label": "Configure Alerts"
                },
                "tab": "65a17957-631b-4ae6-96fa-f1751eddc6b0",
                "type": "BUTTON_WIDGET_COMPONENT"
            },
            "f386864a-28bf-48fc-b9cd-e07106705229": {
                "externalScripts": [],
                "id": "f386864a-28bf-48fc-b9cd-e07106705229",
                "props": {
                    "html": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "da2c7c6c-d63f-472a-928f-5641d881998f",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": {
                                "CSS": ".warning{\n    color: #dc3545;\n    padding-right: .25em;\n}\n\n.alert-action-btn{\n    margin:2px;\n}\n\n.alert-item {\n    font-size: .75rem;\n}\n\n.alert-item .message {\n    font-size: 1rem;\n}\n\n.alert-buttons {\n    float: right;\n    width: 120px;\n    text-align: right;\n}\n\n.alert-buttons button {\n    /* display: block; */\n    text-align: right;\n}",
                                "HTML": "\u003cdiv id=\"alerts\"\u003e\n\t\u003cdiv class=\"list-group\"\u003e\n\n\t\u003c/div\u003e\n\u003c/div\u003e\n",
                                "JavaScript": "//JavaScript\n\n\nconst getAlertConfig = (typeId) =\u003e {\n    let alertConfig;\n    if (datasources.getAlertConfigurations.latestData()) {\n        alertConfig = datasources.getAlertConfigurations.latestData().results.DATA.find(\n            (data) =\u003e data.item_id === typeId\n        )\n    }\n    return alertConfig || {}\n}\n\nconst listGroup = $('#alerts .list-group');\nconst handleAlerts = (data) =\u003e {\n    const alerts = data.results.DATA.filter((alert) =\u003e {\n        if (!alert.snoozed_date) return true\n        return +new Date() \u003e +new Date(alert.snoozed_date)\n    })\n    listGroup.empty();\n\n    if (alerts.length === 0) {\n        listGroup.append('No active alerts')\n    } else {\n        alerts.forEach((a) =\u003e {\n            const item = $('\u003cdiv class=\"alert-item list-group-item list-group-item-action\"\u003e\u003c/div\u003e')\n            const itemDesc = $('\u003cspan\u003e\u003c/span\u003e');\n            const alertType = getAlertConfig(a.configuration_id)\n            itemDesc.html(`\n            \u003cdiv class=\"message\"\u003e\n                \u003cspan\u003e\u003ci class=\"warning fa fa-exclamation-triangle\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/span\u003e\n                ${alertType.message || ''}\u003c/div\u003e\n            \u003cdiv class=\"text-muted\"\u003e${AlertConfigSummary(alertType) || ''}\u003c/div\u003e\n            `)\n            const itemTime = $('\u003cspan\u003e\u003c/span\u003e');\n            itemTime.css({\n                'font-size': '.75rem'\n            })\n            let time = a.sent_date;\n            try {\n                time = new Date(time).toLocaleString()\n            } catch (e) {\n                console.warn('Unable to parse time', e);\n            }\n            const itemButtons = `\u003cdiv class=\"alert-buttons\"\u003e\n            \u003cbutton class=\"alert-action-btn btn btn-outline-success btn-sm acknowledge-alert\" data-item-id=${a.item_id}\u003eAcknowledge\u003c/button\u003e\n        \u003c/div\u003e`\n            item.append(itemButtons);\n        \n            item.append(itemDesc);\n            item.append(`\u003cdiv\u003e${time}\u003c/div\u003e`);\n            listGroup.append(item);\n        })\n    }\n}\n\nif (!window.hasSubscribedToAlerts) {\n    window.hasSubscribedToAlerts = true;\n    datasources.getAlerts.latestData.subscribe(handleAlerts);\n\n}\n\nif (datasources.getAlerts.lastUpdated) {\n    handleAlerts(datasources.getAlerts.latestData());\n}\n\nif (!window.setupAlertListeners) {\n    window.setupAlertListeners = true;\n    $('body').on('click', '.acknowledge-alert', (e) =\u003e {\n        datasources.updateAlert.sendData({\n            item_id: e.target.dataset.itemId,\n            alert: {\n                is_active: false,\n                acknowledge_date: (new Date()).toISOString()\n            }\n        }).then(() =\u003e {\n            datasources.getAlerts.sendData();\n        })\n    })\n\n    $('body').on('click', '.snooze-alert', (e) =\u003e {\n        datasources.updateAlert.sendData({\n            item_id: e.target.dataset.itemId,\n            alert: {\n                snoozed_count: Number(e.target.dataset.snoozedCount) + 1,\n                // 30 min from now\n                snoozed_date: (new Date(Date.now() + 1000 * 30 * 60)).toISOString()\n            }\n        }).then(() =\u003e {\n            datasources.getAlerts.sendData();\n        })\n    })\n}\n\nfunction AlertConfigSummary(alertConfig) {\n    if (!datasources.getSensors.latestData() || !datasources.getSensorTypes.latestData()) return ''\n    const rules = tryParse(alertConfig.rules)\n    let text = rules \u0026\u0026 rules.map((rule) =\u003e RuleSummary(rule)).join(' and ')\n    if(alertConfig.timeout) {\n        text = text + ` for ${alertConfig.timeout} minutes`\n    }\n    return text\n}\n\nfunction RuleSummary(rule) {\n    if(!rule) return ''\n    const sensor = datasources.getSensors.latestData().results.find((s) =\u003e s.name === rule.sensor_id) || {}\n    const sensorType = datasources.getSensorTypes.latestData().results.DATA.find((s) =\u003e s.item_id === sensor.sensor_type_id) || {}\n    const propertyStr = rule.property === 'battery_level' ? 'Battery' : sensorType.name\n    const wordsFromOp = {\n        'GT': 'is above',\n        'LT': 'is below',\n        'EQ': 'is equal',\n    }\n    const operatorStr = (sensorType.data_type === 'int' || rule.property === 'battery_level') ? wordsFromOp[rule.operator] : ''\n    const valueStr = (sensorType.data_type === 'int' || rule.property === 'battery_level') ? rule.value : (rule.value ? 'is open' : 'is closed')\n    const attributeStr = rule.property === 'battery_level' ? 'percent' : sensorType.attributes\n    return `\"${sensor.sensor_label || sensor.name}\" ${propertyStr \u0026\u0026 propertyStr.toLowerCase()} ${operatorStr} ${valueStr} ${attributeStr \u0026\u0026 attributeStr.toLowerCase()}`\n}\n\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str)\n    } catch(e) {\n        console.warn(e, str)\n    }\n}"
                            }
                        }
                    }
                },
                "tab": "65a17957-631b-4ae6-96fa-f1751eddc6b0",
                "type": "HTML_WIDGET_COMPONENT"
            },
            "f469e03c-4bf1-422c-9103-a889b1cc746b": {
                "externalScripts": [],
                "id": "f469e03c-4bf1-422c-9103-a889b1cc746b",
                "props": {
                    "HAS_UNIQUE_STYLE": true,
                    "buttonColor": "#3f21d4",
                    "cardBackgroundColor": "#f5f5f5",
                    "compactForm": false,
                    "displayColumn": "name",
                    "editColumns": {
                        "field1": {
                            "dataType": "string",
                            "display": false,
                            "key": "a7fef147-7287-444e-b851-4c32088829b5",
                            "name": "field1",
                            "orderIdx": 1
                        }
                    },
                    "eventTarget": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "force_data": [
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "outgoing_parser": {
                            "isDebugOn": false,
                            "value": "return this.widget;"
                        },
                        "value": "console.log(this.widget.data);\n\n// return datasources.MY_CODE_SERVICE_NAME.sendData(this.widget.data).then(function (res) {\n//     if (res.success) {\n//         console.log('Successfully created: ', res.results)\n//     } else {\n//         console.log('error: ', res.results)\n//     }\n//     return res\n// })\n\nreturn {}"
                    },
                    "fontColor": "#000000",
                    "htmlId": "live-sensor-gauges",
                    "isReadOnly": true,
                    "listSource": {
                        "dataType": "DYNAMIC_DATA_TYPE",
                        "force_data": [
                            "STATIC_DATA_TYPE",
                            "CALCULATED_DATA_TYPE",
                            "DYNAMIC_DATA_TYPE"
                        ],
                        "id": "98da363e-67a6-45a1-b524-84d44b916844",
                        "incoming_parser": {
                            "isDebugOn": false,
                            "value": "const getDataFromSensors = () =\u003e {\n    let rtn = {};\n    const sensors = this.datasource;\n    for (const id in sensors) {\n        try {\n            rtn = {\n                ...rtn,\n                [id]: Number(sensors[id].message.sensor_message.dataValue)\n            }\n        } catch (e) {\n            console.warn(`Unable to get data for sensor '${id}'`, sensors, e);\n        }\n    }\n    return rtn;\n}\n\nconst getWidthPercentForSensors = (count) =\u003e {\n    if (count === 1) {\n        return '100';\n    } else if (count === 2) {\n        return '50';\n    } else if (count === 3) {\n        return '33';\n    } else if (count \u003e= 4) {\n        return '25';\n    }\n    return '100';\n}\n\nconst doesCrossAlertThreshold = (operator, threshold, value) =\u003e {\n    switch (operator) {\n        case 'EQ':\n            return value == threshold;\n        case 'GT':\n            return value \u003e threshold;\n        case 'LT':\n            return value \u003c threshold;\n        default:\n            return false;\n    }\n}\n\nconst getProgressColor = (sensorInfo) =\u003e {\n    try {\n        if (sensorInfo.alertConfig) {\n            return doesCrossAlertThreshold(sensorInfo.alertConfig.operator, Number(sensorInfo.alertConfig.value), Number(sensorInfo.message.sensor_message.dataValue)) ? 'red' : 'green';\n        }\n    } catch (e) { }\n    return 'green';\n}\n\nconst getFieldSettingsFromSensors = () =\u003e {\n    let rtn = {};\n    const sensors = this.datasource;\n    const widthPercent = getWidthPercentForSensors(Object.keys(sensors).length);\n\n    for (const id in sensors) {\n        const progressColor = getProgressColor(sensors[id]);\n        try {\n            rtn = {\n                ...rtn,\n                [id]: {\n                    name: id, dataType: 'number', display: true, key: id, inputType: 'RADIAL_GAUGE', widthPercent, progressColor\n                }\n            }\n        } catch (e) {\n            console.warn(`Unable to get field settings for '${id}'`, sensors, e);\n        }\n    }\n    return rtn;\n}\n\n/**\n * @type {FormSourceObj}\n */\nvar formSourceObj = {\n    // the initial data the form has when loaded\n    data: getDataFromSensors(),\n\n    // an object the same shape as fieldSettings, that is merged with the settings from the UI\n    // useful for adding dynamic things like dropdown options from a collection\n    overrideFieldSettings: getFieldSettingsFromSensors()\n};\nreturn formSourceObj"
                        }
                    },
                    "noDataText": "No data",
                    "sliderColor": "#6E8592",
                    "submitText": "Submit",
                    "successNotificationText": "Form Submitted!",
                    "titleColor": "#000000",
                    "toggleColor": "#6E8592"
                },
                "tab": "3667bf06-7abe-4486-8dcd-03b23e4fff12",
                "type": "FORM_WIDGET_COMPONENT"
            },
            "flyoutTitle": {
                "externalScripts": [],
                "id": "flyoutTitle",
                "props": {
                    "HAS_UNIQUE_STYLE": true,
                    "fontColor": "#fff",
                    "fontFamily": "Helvetica",
                    "fontSize": 30,
                    "textContent": {
                        "dataType": "CALCULATED_DATA_TYPE",
                        "value": "return portalTitle"
                    }
                },
                "tab": "",
                "type": "TEXT_WIDGET_COMPONENT"
            }
        }
    },
    "description": "",
    "last_updated": "31 Oct 18 19:32 UTC",
    "name": "smart_monitoring",
    "system_key": "aed4cebd0bdedff582d6a498b7e501",
    "type": "custom_v2"
}